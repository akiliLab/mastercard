// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/mastercard.proto

package mastercard

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MastercardRequest struct {
	MerchantID string `protobuf:"bytes,1,opt,name=MerchantID,proto3" json:"MerchantID,omitempty"`
	// this can be fuzzy or exact search
	Search               int64    `protobuf:"varint,2,opt,name=Search,proto3" json:"Search,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MastercardRequest) Reset()         { *m = MastercardRequest{} }
func (m *MastercardRequest) String() string { return proto.CompactTextString(m) }
func (*MastercardRequest) ProtoMessage()    {}
func (*MastercardRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4ec760cea500d20, []int{0}
}

func (m *MastercardRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MastercardRequest.Unmarshal(m, b)
}
func (m *MastercardRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MastercardRequest.Marshal(b, m, deterministic)
}
func (m *MastercardRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MastercardRequest.Merge(m, src)
}
func (m *MastercardRequest) XXX_Size() int {
	return xxx_messageInfo_MastercardRequest.Size(m)
}
func (m *MastercardRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MastercardRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MastercardRequest proto.InternalMessageInfo

func (m *MastercardRequest) GetMerchantID() string {
	if m != nil {
		return m.MerchantID
	}
	return ""
}

func (m *MastercardRequest) GetSearch() int64 {
	if m != nil {
		return m.Search
	}
	return 0
}

type MastercardReply struct {
	MerchantIDs          *MerchantIDs `protobuf:"bytes,1,opt,name=merchantIDs,proto3" json:"merchantIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MastercardReply) Reset()         { *m = MastercardReply{} }
func (m *MastercardReply) String() string { return proto.CompactTextString(m) }
func (*MastercardReply) ProtoMessage()    {}
func (*MastercardReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4ec760cea500d20, []int{1}
}

func (m *MastercardReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MastercardReply.Unmarshal(m, b)
}
func (m *MastercardReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MastercardReply.Marshal(b, m, deterministic)
}
func (m *MastercardReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MastercardReply.Merge(m, src)
}
func (m *MastercardReply) XXX_Size() int {
	return xxx_messageInfo_MastercardReply.Size(m)
}
func (m *MastercardReply) XXX_DiscardUnknown() {
	xxx_messageInfo_MastercardReply.DiscardUnknown(m)
}

var xxx_messageInfo_MastercardReply proto.InternalMessageInfo

func (m *MastercardReply) GetMerchantIDs() *MerchantIDs {
	if m != nil {
		return m.MerchantIDs
	}
	return nil
}

type MerchantIDs struct {
	Message              string      `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	Merchant             []*Merchant `protobuf:"bytes,2,rep,name=Merchant,proto3" json:"Merchant,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *MerchantIDs) Reset()         { *m = MerchantIDs{} }
func (m *MerchantIDs) String() string { return proto.CompactTextString(m) }
func (*MerchantIDs) ProtoMessage()    {}
func (*MerchantIDs) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4ec760cea500d20, []int{2}
}

func (m *MerchantIDs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantIDs.Unmarshal(m, b)
}
func (m *MerchantIDs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantIDs.Marshal(b, m, deterministic)
}
func (m *MerchantIDs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantIDs.Merge(m, src)
}
func (m *MerchantIDs) XXX_Size() int {
	return xxx_messageInfo_MerchantIDs.Size(m)
}
func (m *MerchantIDs) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantIDs.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantIDs proto.InternalMessageInfo

func (m *MerchantIDs) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *MerchantIDs) GetMerchant() []*Merchant {
	if m != nil {
		return m.Merchant
	}
	return nil
}

type Merchant struct {
	Address              *Address `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	PhoneNumber          string   `protobuf:"bytes,2,opt,name=PhoneNumber,proto3" json:"PhoneNumber,omitempty"`
	BrandName            string   `protobuf:"bytes,3,opt,name=BrandName,proto3" json:"BrandName,omitempty"`
	MerchantCategory     string   `protobuf:"bytes,4,opt,name=MerchantCategory,proto3" json:"MerchantCategory,omitempty"`
	MerchantDbaName      string   `protobuf:"bytes,5,opt,name=MerchantDbaName,proto3" json:"MerchantDbaName,omitempty"`
	DescriptorText       string   `protobuf:"bytes,6,opt,name=DescriptorText,proto3" json:"DescriptorText,omitempty"`
	LegalCorporateName   string   `protobuf:"bytes,7,opt,name=LegalCorporateName,proto3" json:"LegalCorporateName,omitempty"`
	Comment              string   `protobuf:"bytes,8,opt,name=Comment,proto3" json:"Comment,omitempty"`
	LocationID           int64    `protobuf:"varint,9,opt,name=LocationID,proto3" json:"LocationID,omitempty"`
	SoleProprietorName   string   `protobuf:"bytes,10,opt,name=SoleProprietorName,proto3" json:"SoleProprietorName,omitempty"`
	MatchConfidenceScore int64    `protobuf:"varint,11,opt,name=MatchConfidenceScore,proto3" json:"MatchConfidenceScore,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Merchant) Reset()         { *m = Merchant{} }
func (m *Merchant) String() string { return proto.CompactTextString(m) }
func (*Merchant) ProtoMessage()    {}
func (*Merchant) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4ec760cea500d20, []int{3}
}

func (m *Merchant) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Merchant.Unmarshal(m, b)
}
func (m *Merchant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Merchant.Marshal(b, m, deterministic)
}
func (m *Merchant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Merchant.Merge(m, src)
}
func (m *Merchant) XXX_Size() int {
	return xxx_messageInfo_Merchant.Size(m)
}
func (m *Merchant) XXX_DiscardUnknown() {
	xxx_messageInfo_Merchant.DiscardUnknown(m)
}

var xxx_messageInfo_Merchant proto.InternalMessageInfo

func (m *Merchant) GetAddress() *Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Merchant) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *Merchant) GetBrandName() string {
	if m != nil {
		return m.BrandName
	}
	return ""
}

func (m *Merchant) GetMerchantCategory() string {
	if m != nil {
		return m.MerchantCategory
	}
	return ""
}

func (m *Merchant) GetMerchantDbaName() string {
	if m != nil {
		return m.MerchantDbaName
	}
	return ""
}

func (m *Merchant) GetDescriptorText() string {
	if m != nil {
		return m.DescriptorText
	}
	return ""
}

func (m *Merchant) GetLegalCorporateName() string {
	if m != nil {
		return m.LegalCorporateName
	}
	return ""
}

func (m *Merchant) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *Merchant) GetLocationID() int64 {
	if m != nil {
		return m.LocationID
	}
	return 0
}

func (m *Merchant) GetSoleProprietorName() string {
	if m != nil {
		return m.SoleProprietorName
	}
	return ""
}

func (m *Merchant) GetMatchConfidenceScore() int64 {
	if m != nil {
		return m.MatchConfidenceScore
	}
	return 0
}

type CountrySubdivision struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Code                 string   `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountrySubdivision) Reset()         { *m = CountrySubdivision{} }
func (m *CountrySubdivision) String() string { return proto.CompactTextString(m) }
func (*CountrySubdivision) ProtoMessage()    {}
func (*CountrySubdivision) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4ec760cea500d20, []int{4}
}

func (m *CountrySubdivision) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountrySubdivision.Unmarshal(m, b)
}
func (m *CountrySubdivision) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountrySubdivision.Marshal(b, m, deterministic)
}
func (m *CountrySubdivision) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountrySubdivision.Merge(m, src)
}
func (m *CountrySubdivision) XXX_Size() int {
	return xxx_messageInfo_CountrySubdivision.Size(m)
}
func (m *CountrySubdivision) XXX_DiscardUnknown() {
	xxx_messageInfo_CountrySubdivision.DiscardUnknown(m)
}

var xxx_messageInfo_CountrySubdivision proto.InternalMessageInfo

func (m *CountrySubdivision) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CountrySubdivision) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

// Country contains country informations
type Country struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Code                 string   `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Country) Reset()         { *m = Country{} }
func (m *Country) String() string { return proto.CompactTextString(m) }
func (*Country) ProtoMessage()    {}
func (*Country) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4ec760cea500d20, []int{5}
}

func (m *Country) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Country.Unmarshal(m, b)
}
func (m *Country) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Country.Marshal(b, m, deterministic)
}
func (m *Country) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Country.Merge(m, src)
}
func (m *Country) XXX_Size() int {
	return xxx_messageInfo_Country.Size(m)
}
func (m *Country) XXX_DiscardUnknown() {
	xxx_messageInfo_Country.DiscardUnknown(m)
}

var xxx_messageInfo_Country proto.InternalMessageInfo

func (m *Country) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Country) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type AdditionalMerchantData struct {
	PaymentFacilitatorId string   `protobuf:"bytes,1,opt,name=payment_facilitator_id,json=paymentFacilitatorId,proto3" json:"payment_facilitator_id,omitempty"`
	SubMerchantId        string   `protobuf:"bytes,2,opt,name=sub_merchant_id,json=subMerchantId,proto3" json:"sub_merchant_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdditionalMerchantData) Reset()         { *m = AdditionalMerchantData{} }
func (m *AdditionalMerchantData) String() string { return proto.CompactTextString(m) }
func (*AdditionalMerchantData) ProtoMessage()    {}
func (*AdditionalMerchantData) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4ec760cea500d20, []int{6}
}

func (m *AdditionalMerchantData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdditionalMerchantData.Unmarshal(m, b)
}
func (m *AdditionalMerchantData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdditionalMerchantData.Marshal(b, m, deterministic)
}
func (m *AdditionalMerchantData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdditionalMerchantData.Merge(m, src)
}
func (m *AdditionalMerchantData) XXX_Size() int {
	return xxx_messageInfo_AdditionalMerchantData.Size(m)
}
func (m *AdditionalMerchantData) XXX_DiscardUnknown() {
	xxx_messageInfo_AdditionalMerchantData.DiscardUnknown(m)
}

var xxx_messageInfo_AdditionalMerchantData proto.InternalMessageInfo

func (m *AdditionalMerchantData) GetPaymentFacilitatorId() string {
	if m != nil {
		return m.PaymentFacilitatorId
	}
	return ""
}

func (m *AdditionalMerchantData) GetSubMerchantId() string {
	if m != nil {
		return m.SubMerchantId
	}
	return ""
}

// Address contains the full address of a merchant
type Address struct {
	Line1                string   `protobuf:"bytes,1,opt,name=line1,proto3" json:"line1,omitempty"`
	Line2                string   `protobuf:"bytes,2,opt,name=line2,proto3" json:"line2,omitempty"`
	City                 string   `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	CountrySubdivision   string   `protobuf:"bytes,4,opt,name=country_subdivision,json=countrySubdivision,proto3" json:"country_subdivision,omitempty"`
	PostalCode           string   `protobuf:"bytes,5,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`
	Country              string   `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Address) Reset()         { *m = Address{} }
func (m *Address) String() string { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()    {}
func (*Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4ec760cea500d20, []int{7}
}

func (m *Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Address.Unmarshal(m, b)
}
func (m *Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Address.Marshal(b, m, deterministic)
}
func (m *Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Address.Merge(m, src)
}
func (m *Address) XXX_Size() int {
	return xxx_messageInfo_Address.Size(m)
}
func (m *Address) XXX_DiscardUnknown() {
	xxx_messageInfo_Address.DiscardUnknown(m)
}

var xxx_messageInfo_Address proto.InternalMessageInfo

func (m *Address) GetLine1() string {
	if m != nil {
		return m.Line1
	}
	return ""
}

func (m *Address) GetLine2() string {
	if m != nil {
		return m.Line2
	}
	return ""
}

func (m *Address) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Address) GetCountrySubdivision() string {
	if m != nil {
		return m.CountrySubdivision
	}
	return ""
}

func (m *Address) GetPostalCode() string {
	if m != nil {
		return m.PostalCode
	}
	return ""
}

func (m *Address) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

type TokenCryptogram struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	PanSequenceNumber    string   `protobuf:"bytes,3,opt,name=pan_sequence_number,json=panSequenceNumber,proto3" json:"pan_sequence_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenCryptogram) Reset()         { *m = TokenCryptogram{} }
func (m *TokenCryptogram) String() string { return proto.CompactTextString(m) }
func (*TokenCryptogram) ProtoMessage()    {}
func (*TokenCryptogram) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4ec760cea500d20, []int{8}
}

func (m *TokenCryptogram) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenCryptogram.Unmarshal(m, b)
}
func (m *TokenCryptogram) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenCryptogram.Marshal(b, m, deterministic)
}
func (m *TokenCryptogram) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenCryptogram.Merge(m, src)
}
func (m *TokenCryptogram) XXX_Size() int {
	return xxx_messageInfo_TokenCryptogram.Size(m)
}
func (m *TokenCryptogram) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenCryptogram.DiscardUnknown(m)
}

var xxx_messageInfo_TokenCryptogram proto.InternalMessageInfo

func (m *TokenCryptogram) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *TokenCryptogram) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *TokenCryptogram) GetPanSequenceNumber() string {
	if m != nil {
		return m.PanSequenceNumber
	}
	return ""
}

type MastercardCurrencyConversionRequest struct {
	// Date of the requested FX rates.
	FxDate string `protobuf:"bytes,1,opt,name=fxDate,proto3" json:"fxDate,omitempty"`
	// Currency of the transaction.
	TransCurr string `protobuf:"bytes,2,opt,name=transCurr,proto3" json:"transCurr,omitempty"`
	// Cardholder billing currency.
	CrdhldBillCurr string `protobuf:"bytes,3,opt,name=crdhldBillCurr,proto3" json:"crdhldBillCurr,omitempty"`
	// Additional fees imposed by the bank.
	BankFee int64 `protobuf:"varint,4,opt,name=bankFee,proto3" json:"bankFee,omitempty"`
	// Amount in the transaction currency
	TransAmt             float32  `protobuf:"fixed32,5,opt,name=transAmt,proto3" json:"transAmt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MastercardCurrencyConversionRequest) Reset()         { *m = MastercardCurrencyConversionRequest{} }
func (m *MastercardCurrencyConversionRequest) String() string { return proto.CompactTextString(m) }
func (*MastercardCurrencyConversionRequest) ProtoMessage()    {}
func (*MastercardCurrencyConversionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4ec760cea500d20, []int{9}
}

func (m *MastercardCurrencyConversionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MastercardCurrencyConversionRequest.Unmarshal(m, b)
}
func (m *MastercardCurrencyConversionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MastercardCurrencyConversionRequest.Marshal(b, m, deterministic)
}
func (m *MastercardCurrencyConversionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MastercardCurrencyConversionRequest.Merge(m, src)
}
func (m *MastercardCurrencyConversionRequest) XXX_Size() int {
	return xxx_messageInfo_MastercardCurrencyConversionRequest.Size(m)
}
func (m *MastercardCurrencyConversionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MastercardCurrencyConversionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MastercardCurrencyConversionRequest proto.InternalMessageInfo

func (m *MastercardCurrencyConversionRequest) GetFxDate() string {
	if m != nil {
		return m.FxDate
	}
	return ""
}

func (m *MastercardCurrencyConversionRequest) GetTransCurr() string {
	if m != nil {
		return m.TransCurr
	}
	return ""
}

func (m *MastercardCurrencyConversionRequest) GetCrdhldBillCurr() string {
	if m != nil {
		return m.CrdhldBillCurr
	}
	return ""
}

func (m *MastercardCurrencyConversionRequest) GetBankFee() int64 {
	if m != nil {
		return m.BankFee
	}
	return 0
}

func (m *MastercardCurrencyConversionRequest) GetTransAmt() float32 {
	if m != nil {
		return m.TransAmt
	}
	return 0
}

type MastercardCurrencyConversionReply struct {
	Response             *CurrencyResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *MastercardCurrencyConversionReply) Reset()         { *m = MastercardCurrencyConversionReply{} }
func (m *MastercardCurrencyConversionReply) String() string { return proto.CompactTextString(m) }
func (*MastercardCurrencyConversionReply) ProtoMessage()    {}
func (*MastercardCurrencyConversionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4ec760cea500d20, []int{10}
}

func (m *MastercardCurrencyConversionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MastercardCurrencyConversionReply.Unmarshal(m, b)
}
func (m *MastercardCurrencyConversionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MastercardCurrencyConversionReply.Marshal(b, m, deterministic)
}
func (m *MastercardCurrencyConversionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MastercardCurrencyConversionReply.Merge(m, src)
}
func (m *MastercardCurrencyConversionReply) XXX_Size() int {
	return xxx_messageInfo_MastercardCurrencyConversionReply.Size(m)
}
func (m *MastercardCurrencyConversionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_MastercardCurrencyConversionReply.DiscardUnknown(m)
}

var xxx_messageInfo_MastercardCurrencyConversionReply proto.InternalMessageInfo

func (m *MastercardCurrencyConversionReply) GetResponse() *CurrencyResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

type CurrencyResponse struct {
	// The name of the service being requested.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The type of response being returned by the API.
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// The description of the API being called.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Additional fees imposed by the bank.
	Date *timestamp.Timestamp `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
	// Amount in the transaction currency
	TransAmt float32 `protobuf:"fixed32,5,opt,name=transAmt,proto3" json:"transAmt,omitempty"`
	// Data
	Data                 *CurrencyDataResponse `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CurrencyResponse) Reset()         { *m = CurrencyResponse{} }
func (m *CurrencyResponse) String() string { return proto.CompactTextString(m) }
func (*CurrencyResponse) ProtoMessage()    {}
func (*CurrencyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4ec760cea500d20, []int{11}
}

func (m *CurrencyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CurrencyResponse.Unmarshal(m, b)
}
func (m *CurrencyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CurrencyResponse.Marshal(b, m, deterministic)
}
func (m *CurrencyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CurrencyResponse.Merge(m, src)
}
func (m *CurrencyResponse) XXX_Size() int {
	return xxx_messageInfo_CurrencyResponse.Size(m)
}
func (m *CurrencyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CurrencyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CurrencyResponse proto.InternalMessageInfo

func (m *CurrencyResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CurrencyResponse) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *CurrencyResponse) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CurrencyResponse) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *CurrencyResponse) GetTransAmt() float32 {
	if m != nil {
		return m.TransAmt
	}
	return 0
}

func (m *CurrencyResponse) GetData() *CurrencyDataResponse {
	if m != nil {
		return m.Data
	}
	return nil
}

type CurrencyDataResponse struct {
	// Rate applied to the transaction to convert from Transaction Currency to
	// Cardholder Billing Currency.
	ConversionRate float32 `protobuf:"fixed32,1,opt,name=conversionRate,proto3" json:"conversionRate,omitempty"`
	// Amount in the cardholder billing currency.
	CrdhldBillAmt float32 `protobuf:"fixed32,2,opt,name=crdhldBillAmt,proto3" json:"crdhldBillAmt,omitempty"`
	// Amount in the transaction currency.
	TransAmt float32 `protobuf:"fixed32,3,opt,name=transAmt,proto3" json:"transAmt,omitempty"`
	// Date of the requested FX rates.
	FxDate string `protobuf:"bytes,4,opt,name=fxDate,proto3" json:"fxDate,omitempty"`
	// Currency of the transaction
	TransCurr string `protobuf:"bytes,5,opt,name=transCurr,proto3" json:"transCurr,omitempty"`
	// Cardholder billing currency.
	CrdhldBillCurr string `protobuf:"bytes,6,opt,name=crdhldBillCurr,proto3" json:"crdhldBillCurr,omitempty"`
	// Bankfee
	BankFee float32 `protobuf:"fixed32,7,opt,name=bankFee,proto3" json:"bankFee,omitempty"`
	// Error code
	ErrorCode int64 `protobuf:"varint,8,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	// The reason for the error.
	ErrorMessage         string   `protobuf:"bytes,9,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CurrencyDataResponse) Reset()         { *m = CurrencyDataResponse{} }
func (m *CurrencyDataResponse) String() string { return proto.CompactTextString(m) }
func (*CurrencyDataResponse) ProtoMessage()    {}
func (*CurrencyDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4ec760cea500d20, []int{12}
}

func (m *CurrencyDataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CurrencyDataResponse.Unmarshal(m, b)
}
func (m *CurrencyDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CurrencyDataResponse.Marshal(b, m, deterministic)
}
func (m *CurrencyDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CurrencyDataResponse.Merge(m, src)
}
func (m *CurrencyDataResponse) XXX_Size() int {
	return xxx_messageInfo_CurrencyDataResponse.Size(m)
}
func (m *CurrencyDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CurrencyDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CurrencyDataResponse proto.InternalMessageInfo

func (m *CurrencyDataResponse) GetConversionRate() float32 {
	if m != nil {
		return m.ConversionRate
	}
	return 0
}

func (m *CurrencyDataResponse) GetCrdhldBillAmt() float32 {
	if m != nil {
		return m.CrdhldBillAmt
	}
	return 0
}

func (m *CurrencyDataResponse) GetTransAmt() float32 {
	if m != nil {
		return m.TransAmt
	}
	return 0
}

func (m *CurrencyDataResponse) GetFxDate() string {
	if m != nil {
		return m.FxDate
	}
	return ""
}

func (m *CurrencyDataResponse) GetTransCurr() string {
	if m != nil {
		return m.TransCurr
	}
	return ""
}

func (m *CurrencyDataResponse) GetCrdhldBillCurr() string {
	if m != nil {
		return m.CrdhldBillCurr
	}
	return ""
}

func (m *CurrencyDataResponse) GetBankFee() float32 {
	if m != nil {
		return m.BankFee
	}
	return 0
}

func (m *CurrencyDataResponse) GetErrorCode() int64 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *CurrencyDataResponse) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

type Sender struct {
	FirstName              string                  `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	MiddleName             string                  `protobuf:"bytes,2,opt,name=middle_name,json=middleName,proto3" json:"middle_name,omitempty"`
	LastName               string                  `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Address                *Address                `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Phone                  string                  `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`
	Email                  string                  `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	AuthenticationValue    string                  `protobuf:"bytes,7,opt,name=authentication_value,json=authenticationValue,proto3" json:"authentication_value,omitempty"`
	TokenCryptogram        *TokenCryptogram        `protobuf:"bytes,8,opt,name=token_cryptogram,json=tokenCryptogram,proto3" json:"token_cryptogram,omitempty"`
	AdditionalMerchantData *AdditionalMerchantData `protobuf:"bytes,9,opt,name=additional_merchant_data,json=additionalMerchantData,proto3" json:"additional_merchant_data,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                `json:"-"`
	XXX_unrecognized       []byte                  `json:"-"`
	XXX_sizecache          int32                   `json:"-"`
}

func (m *Sender) Reset()         { *m = Sender{} }
func (m *Sender) String() string { return proto.CompactTextString(m) }
func (*Sender) ProtoMessage()    {}
func (*Sender) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4ec760cea500d20, []int{13}
}

func (m *Sender) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sender.Unmarshal(m, b)
}
func (m *Sender) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sender.Marshal(b, m, deterministic)
}
func (m *Sender) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sender.Merge(m, src)
}
func (m *Sender) XXX_Size() int {
	return xxx_messageInfo_Sender.Size(m)
}
func (m *Sender) XXX_DiscardUnknown() {
	xxx_messageInfo_Sender.DiscardUnknown(m)
}

var xxx_messageInfo_Sender proto.InternalMessageInfo

func (m *Sender) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Sender) GetMiddleName() string {
	if m != nil {
		return m.MiddleName
	}
	return ""
}

func (m *Sender) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Sender) GetAddress() *Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Sender) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Sender) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Sender) GetAuthenticationValue() string {
	if m != nil {
		return m.AuthenticationValue
	}
	return ""
}

func (m *Sender) GetTokenCryptogram() *TokenCryptogram {
	if m != nil {
		return m.TokenCryptogram
	}
	return nil
}

func (m *Sender) GetAdditionalMerchantData() *AdditionalMerchantData {
	if m != nil {
		return m.AdditionalMerchantData
	}
	return nil
}

type MerchantTransfer struct {
	TransferReference             string              `protobuf:"bytes,1,opt,name=transfer_reference,json=transferReference,proto3" json:"transfer_reference,omitempty"`
	PaymentType                   string              `protobuf:"bytes,2,opt,name=payment_type,json=paymentType,proto3" json:"payment_type,omitempty"`
	PaymentOriginationCountry     string              `protobuf:"bytes,3,opt,name=payment_origination_country,json=paymentOriginationCountry,proto3" json:"payment_origination_country,omitempty"`
	TransactionLocalDateTime      string              `protobuf:"bytes,4,opt,name=transaction_local_date_time,json=transactionLocalDateTime,proto3" json:"transaction_local_date_time,omitempty"`
	TransferAmount                *TransferAmount     `protobuf:"bytes,5,opt,name=transfer_amount,json=transferAmount,proto3" json:"transfer_amount,omitempty"`
	SenderAccountUri              string              `protobuf:"bytes,6,opt,name=sender_account_uri,json=senderAccountUri,proto3" json:"sender_account_uri,omitempty"`
	Sender                        *Sender             `protobuf:"bytes,7,opt,name=sender,proto3" json:"sender,omitempty"`
	RecipientAccountUri           string              `protobuf:"bytes,8,opt,name=recipient_account_uri,json=recipientAccountUri,proto3" json:"recipient_account_uri,omitempty"`
	Recipient                     *Recipient          `protobuf:"bytes,9,opt,name=recipient,proto3" json:"recipient,omitempty"`
	ReconciliationData            *ReconciliationData `protobuf:"bytes,10,opt,name=reconciliation_data,json=reconciliationData,proto3" json:"reconciliation_data,omitempty"`
	MastercardAssignedId          string              `protobuf:"bytes,11,opt,name=mastercard_assigned_id,json=mastercardAssignedId,proto3" json:"mastercard_assigned_id,omitempty"`
	RoutingTransitNumber          string              `protobuf:"bytes,12,opt,name=routing_transit_number,json=routingTransitNumber,proto3" json:"routing_transit_number,omitempty"`
	ProcessorId                   string              `protobuf:"bytes,13,opt,name=processor_id,json=processorId,proto3" json:"processor_id,omitempty"`
	AdditionalMessage             string              `protobuf:"bytes,14,opt,name=additional_message,json=additionalMessage,proto3" json:"additional_message,omitempty"`
	ParticipationId               string              `protobuf:"bytes,15,opt,name=participation_id,json=participationId,proto3" json:"participation_id,omitempty"`
	ConvenienceAmount             string              `protobuf:"bytes,16,opt,name=convenience_amount,json=convenienceAmount,proto3" json:"convenience_amount,omitempty"`
	ConvenienceIndicator          string              `protobuf:"bytes,17,opt,name=convenience_indicator,json=convenienceIndicator,proto3" json:"convenience_indicator,omitempty"`
	InterchangeRateDesignator     string              `protobuf:"bytes,18,opt,name=interchange_rate_designator,json=interchangeRateDesignator,proto3" json:"interchange_rate_designator,omitempty"`
	QrData                        string              `protobuf:"bytes,19,opt,name=qr_data,json=qrData,proto3" json:"qr_data,omitempty"`
	UniqueReferenceNumber         string              `protobuf:"bytes,20,opt,name=unique_reference_number,json=uniqueReferenceNumber,proto3" json:"unique_reference_number,omitempty"`
	Participant                   *Participant        `protobuf:"bytes,21,opt,name=participant,proto3" json:"participant,omitempty"`
	DigitalAccountReferenceNumber string              `protobuf:"bytes,22,opt,name=digital_account_reference_number,json=digitalAccountReferenceNumber,proto3" json:"digital_account_reference_number,omitempty"`
	XXX_NoUnkeyedLiteral          struct{}            `json:"-"`
	XXX_unrecognized              []byte              `json:"-"`
	XXX_sizecache                 int32               `json:"-"`
}

func (m *MerchantTransfer) Reset()         { *m = MerchantTransfer{} }
func (m *MerchantTransfer) String() string { return proto.CompactTextString(m) }
func (*MerchantTransfer) ProtoMessage()    {}
func (*MerchantTransfer) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4ec760cea500d20, []int{14}
}

func (m *MerchantTransfer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantTransfer.Unmarshal(m, b)
}
func (m *MerchantTransfer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantTransfer.Marshal(b, m, deterministic)
}
func (m *MerchantTransfer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantTransfer.Merge(m, src)
}
func (m *MerchantTransfer) XXX_Size() int {
	return xxx_messageInfo_MerchantTransfer.Size(m)
}
func (m *MerchantTransfer) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantTransfer.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantTransfer proto.InternalMessageInfo

func (m *MerchantTransfer) GetTransferReference() string {
	if m != nil {
		return m.TransferReference
	}
	return ""
}

func (m *MerchantTransfer) GetPaymentType() string {
	if m != nil {
		return m.PaymentType
	}
	return ""
}

func (m *MerchantTransfer) GetPaymentOriginationCountry() string {
	if m != nil {
		return m.PaymentOriginationCountry
	}
	return ""
}

func (m *MerchantTransfer) GetTransactionLocalDateTime() string {
	if m != nil {
		return m.TransactionLocalDateTime
	}
	return ""
}

func (m *MerchantTransfer) GetTransferAmount() *TransferAmount {
	if m != nil {
		return m.TransferAmount
	}
	return nil
}

func (m *MerchantTransfer) GetSenderAccountUri() string {
	if m != nil {
		return m.SenderAccountUri
	}
	return ""
}

func (m *MerchantTransfer) GetSender() *Sender {
	if m != nil {
		return m.Sender
	}
	return nil
}

func (m *MerchantTransfer) GetRecipientAccountUri() string {
	if m != nil {
		return m.RecipientAccountUri
	}
	return ""
}

func (m *MerchantTransfer) GetRecipient() *Recipient {
	if m != nil {
		return m.Recipient
	}
	return nil
}

func (m *MerchantTransfer) GetReconciliationData() *ReconciliationData {
	if m != nil {
		return m.ReconciliationData
	}
	return nil
}

func (m *MerchantTransfer) GetMastercardAssignedId() string {
	if m != nil {
		return m.MastercardAssignedId
	}
	return ""
}

func (m *MerchantTransfer) GetRoutingTransitNumber() string {
	if m != nil {
		return m.RoutingTransitNumber
	}
	return ""
}

func (m *MerchantTransfer) GetProcessorId() string {
	if m != nil {
		return m.ProcessorId
	}
	return ""
}

func (m *MerchantTransfer) GetAdditionalMessage() string {
	if m != nil {
		return m.AdditionalMessage
	}
	return ""
}

func (m *MerchantTransfer) GetParticipationId() string {
	if m != nil {
		return m.ParticipationId
	}
	return ""
}

func (m *MerchantTransfer) GetConvenienceAmount() string {
	if m != nil {
		return m.ConvenienceAmount
	}
	return ""
}

func (m *MerchantTransfer) GetConvenienceIndicator() string {
	if m != nil {
		return m.ConvenienceIndicator
	}
	return ""
}

func (m *MerchantTransfer) GetInterchangeRateDesignator() string {
	if m != nil {
		return m.InterchangeRateDesignator
	}
	return ""
}

func (m *MerchantTransfer) GetQrData() string {
	if m != nil {
		return m.QrData
	}
	return ""
}

func (m *MerchantTransfer) GetUniqueReferenceNumber() string {
	if m != nil {
		return m.UniqueReferenceNumber
	}
	return ""
}

func (m *MerchantTransfer) GetParticipant() *Participant {
	if m != nil {
		return m.Participant
	}
	return nil
}

func (m *MerchantTransfer) GetDigitalAccountReferenceNumber() string {
	if m != nil {
		return m.DigitalAccountReferenceNumber
	}
	return ""
}

type Recipient struct {
	FirstName              string                  `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	MiddleName             string                  `protobuf:"bytes,2,opt,name=middle_name,json=middleName,proto3" json:"middle_name,omitempty"`
	LastName               string                  `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Address                *Address                `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Phone                  string                  `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`
	Email                  string                  `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	AuthenticationValue    string                  `protobuf:"bytes,7,opt,name=authentication_value,json=authenticationValue,proto3" json:"authentication_value,omitempty"`
	TokenCryptogram        *TokenCryptogram        `protobuf:"bytes,8,opt,name=token_cryptogram,json=tokenCryptogram,proto3" json:"token_cryptogram,omitempty"`
	MerchantCategoryCode   string                  `protobuf:"bytes,9,opt,name=merchant_category_code,json=merchantCategoryCode,proto3" json:"merchant_category_code,omitempty"`
	AdditionalMerchantData *AdditionalMerchantData `protobuf:"bytes,10,opt,name=additional_merchant_data,json=additionalMerchantData,proto3" json:"additional_merchant_data,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                `json:"-"`
	XXX_unrecognized       []byte                  `json:"-"`
	XXX_sizecache          int32                   `json:"-"`
}

func (m *Recipient) Reset()         { *m = Recipient{} }
func (m *Recipient) String() string { return proto.CompactTextString(m) }
func (*Recipient) ProtoMessage()    {}
func (*Recipient) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4ec760cea500d20, []int{15}
}

func (m *Recipient) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Recipient.Unmarshal(m, b)
}
func (m *Recipient) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Recipient.Marshal(b, m, deterministic)
}
func (m *Recipient) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Recipient.Merge(m, src)
}
func (m *Recipient) XXX_Size() int {
	return xxx_messageInfo_Recipient.Size(m)
}
func (m *Recipient) XXX_DiscardUnknown() {
	xxx_messageInfo_Recipient.DiscardUnknown(m)
}

var xxx_messageInfo_Recipient proto.InternalMessageInfo

func (m *Recipient) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Recipient) GetMiddleName() string {
	if m != nil {
		return m.MiddleName
	}
	return ""
}

func (m *Recipient) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Recipient) GetAddress() *Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Recipient) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Recipient) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Recipient) GetAuthenticationValue() string {
	if m != nil {
		return m.AuthenticationValue
	}
	return ""
}

func (m *Recipient) GetTokenCryptogram() *TokenCryptogram {
	if m != nil {
		return m.TokenCryptogram
	}
	return nil
}

func (m *Recipient) GetMerchantCategoryCode() string {
	if m != nil {
		return m.MerchantCategoryCode
	}
	return ""
}

func (m *Recipient) GetAdditionalMerchantData() *AdditionalMerchantData {
	if m != nil {
		return m.AdditionalMerchantData
	}
	return nil
}

type TransferAmount struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Currency             string   `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferAmount) Reset()         { *m = TransferAmount{} }
func (m *TransferAmount) String() string { return proto.CompactTextString(m) }
func (*TransferAmount) ProtoMessage()    {}
func (*TransferAmount) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4ec760cea500d20, []int{16}
}

func (m *TransferAmount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferAmount.Unmarshal(m, b)
}
func (m *TransferAmount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferAmount.Marshal(b, m, deterministic)
}
func (m *TransferAmount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferAmount.Merge(m, src)
}
func (m *TransferAmount) XXX_Size() int {
	return xxx_messageInfo_TransferAmount.Size(m)
}
func (m *TransferAmount) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferAmount.DiscardUnknown(m)
}

var xxx_messageInfo_TransferAmount proto.InternalMessageInfo

func (m *TransferAmount) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *TransferAmount) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

type TransactionAmount struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Currency             string   `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransactionAmount) Reset()         { *m = TransactionAmount{} }
func (m *TransactionAmount) String() string { return proto.CompactTextString(m) }
func (*TransactionAmount) ProtoMessage()    {}
func (*TransactionAmount) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4ec760cea500d20, []int{17}
}

func (m *TransactionAmount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionAmount.Unmarshal(m, b)
}
func (m *TransactionAmount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionAmount.Marshal(b, m, deterministic)
}
func (m *TransactionAmount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionAmount.Merge(m, src)
}
func (m *TransactionAmount) XXX_Size() int {
	return xxx_messageInfo_TransactionAmount.Size(m)
}
func (m *TransactionAmount) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionAmount.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionAmount proto.InternalMessageInfo

func (m *TransactionAmount) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *TransactionAmount) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

type Participant struct {
	CardAcceptorId       string   `protobuf:"bytes,1,opt,name=card_acceptor_id,json=cardAcceptorId,proto3" json:"card_acceptor_id,omitempty"`
	CardAcceptorName     string   `protobuf:"bytes,2,opt,name=card_acceptor_name,json=cardAcceptorName,proto3" json:"card_acceptor_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Participant) Reset()         { *m = Participant{} }
func (m *Participant) String() string { return proto.CompactTextString(m) }
func (*Participant) ProtoMessage()    {}
func (*Participant) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4ec760cea500d20, []int{18}
}

func (m *Participant) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Participant.Unmarshal(m, b)
}
func (m *Participant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Participant.Marshal(b, m, deterministic)
}
func (m *Participant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Participant.Merge(m, src)
}
func (m *Participant) XXX_Size() int {
	return xxx_messageInfo_Participant.Size(m)
}
func (m *Participant) XXX_DiscardUnknown() {
	xxx_messageInfo_Participant.DiscardUnknown(m)
}

var xxx_messageInfo_Participant proto.InternalMessageInfo

func (m *Participant) GetCardAcceptorId() string {
	if m != nil {
		return m.CardAcceptorId
	}
	return ""
}

func (m *Participant) GetCardAcceptorName() string {
	if m != nil {
		return m.CardAcceptorName
	}
	return ""
}

type CustomField struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CustomField) Reset()         { *m = CustomField{} }
func (m *CustomField) String() string { return proto.CompactTextString(m) }
func (*CustomField) ProtoMessage()    {}
func (*CustomField) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4ec760cea500d20, []int{19}
}

func (m *CustomField) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CustomField.Unmarshal(m, b)
}
func (m *CustomField) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CustomField.Marshal(b, m, deterministic)
}
func (m *CustomField) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomField.Merge(m, src)
}
func (m *CustomField) XXX_Size() int {
	return xxx_messageInfo_CustomField.Size(m)
}
func (m *CustomField) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomField.DiscardUnknown(m)
}

var xxx_messageInfo_CustomField proto.InternalMessageInfo

func (m *CustomField) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CustomField) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type ReconciliationData struct {
	CustomField          []*CustomField `protobuf:"bytes,1,rep,name=custom_field,json=customField,proto3" json:"custom_field,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ReconciliationData) Reset()         { *m = ReconciliationData{} }
func (m *ReconciliationData) String() string { return proto.CompactTextString(m) }
func (*ReconciliationData) ProtoMessage()    {}
func (*ReconciliationData) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4ec760cea500d20, []int{20}
}

func (m *ReconciliationData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReconciliationData.Unmarshal(m, b)
}
func (m *ReconciliationData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReconciliationData.Marshal(b, m, deterministic)
}
func (m *ReconciliationData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReconciliationData.Merge(m, src)
}
func (m *ReconciliationData) XXX_Size() int {
	return xxx_messageInfo_ReconciliationData.Size(m)
}
func (m *ReconciliationData) XXX_DiscardUnknown() {
	xxx_messageInfo_ReconciliationData.DiscardUnknown(m)
}

var xxx_messageInfo_ReconciliationData proto.InternalMessageInfo

func (m *ReconciliationData) GetCustomField() []*CustomField {
	if m != nil {
		return m.CustomField
	}
	return nil
}

type MerchantTransferFundingAndPaymentRequest struct {
	PartnerId            string            `protobuf:"bytes,1,opt,name=partnerId,proto3" json:"partnerId,omitempty"`
	MerchantTransfer     *MerchantTransfer `protobuf:"bytes,2,opt,name=merchant_transfer,json=merchantTransfer,proto3" json:"merchant_transfer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *MerchantTransferFundingAndPaymentRequest) Reset() {
	*m = MerchantTransferFundingAndPaymentRequest{}
}
func (m *MerchantTransferFundingAndPaymentRequest) String() string { return proto.CompactTextString(m) }
func (*MerchantTransferFundingAndPaymentRequest) ProtoMessage()    {}
func (*MerchantTransferFundingAndPaymentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4ec760cea500d20, []int{21}
}

func (m *MerchantTransferFundingAndPaymentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantTransferFundingAndPaymentRequest.Unmarshal(m, b)
}
func (m *MerchantTransferFundingAndPaymentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantTransferFundingAndPaymentRequest.Marshal(b, m, deterministic)
}
func (m *MerchantTransferFundingAndPaymentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantTransferFundingAndPaymentRequest.Merge(m, src)
}
func (m *MerchantTransferFundingAndPaymentRequest) XXX_Size() int {
	return xxx_messageInfo_MerchantTransferFundingAndPaymentRequest.Size(m)
}
func (m *MerchantTransferFundingAndPaymentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantTransferFundingAndPaymentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantTransferFundingAndPaymentRequest proto.InternalMessageInfo

func (m *MerchantTransferFundingAndPaymentRequest) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

func (m *MerchantTransferFundingAndPaymentRequest) GetMerchantTransfer() *MerchantTransfer {
	if m != nil {
		return m.MerchantTransfer
	}
	return nil
}

type MerchantTransferFundingAndPaymentResponse struct {
	MerchantTransfer     *MerchantTransferResponse `protobuf:"bytes,1,opt,name=merchant_transfer,json=merchantTransfer,proto3" json:"merchant_transfer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *MerchantTransferFundingAndPaymentResponse) Reset() {
	*m = MerchantTransferFundingAndPaymentResponse{}
}
func (m *MerchantTransferFundingAndPaymentResponse) String() string { return proto.CompactTextString(m) }
func (*MerchantTransferFundingAndPaymentResponse) ProtoMessage()    {}
func (*MerchantTransferFundingAndPaymentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4ec760cea500d20, []int{22}
}

func (m *MerchantTransferFundingAndPaymentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantTransferFundingAndPaymentResponse.Unmarshal(m, b)
}
func (m *MerchantTransferFundingAndPaymentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantTransferFundingAndPaymentResponse.Marshal(b, m, deterministic)
}
func (m *MerchantTransferFundingAndPaymentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantTransferFundingAndPaymentResponse.Merge(m, src)
}
func (m *MerchantTransferFundingAndPaymentResponse) XXX_Size() int {
	return xxx_messageInfo_MerchantTransferFundingAndPaymentResponse.Size(m)
}
func (m *MerchantTransferFundingAndPaymentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantTransferFundingAndPaymentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantTransferFundingAndPaymentResponse proto.InternalMessageInfo

func (m *MerchantTransferFundingAndPaymentResponse) GetMerchantTransfer() *MerchantTransferResponse {
	if m != nil {
		return m.MerchantTransfer
	}
	return nil
}

type MerchantTransferResponse struct {
	Id                            string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ResourceType                  string              `protobuf:"bytes,2,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	TransferReference             string              `protobuf:"bytes,3,opt,name=transfer_reference,json=transferReference,proto3" json:"transfer_reference,omitempty"`
	PaymentTypeb                  string              `protobuf:"bytes,26,opt,name=payment_typeb,json=paymentTypeb,proto3" json:"payment_typeb,omitempty"`
	SenderAccountUri              string              `protobuf:"bytes,4,opt,name=sender_account_uri,json=senderAccountUri,proto3" json:"sender_account_uri,omitempty"`
	DigitalAccountReferenceNumber string              `protobuf:"bytes,5,opt,name=digital_account_reference_number,json=digitalAccountReferenceNumber,proto3" json:"digital_account_reference_number,omitempty"`
	Sender                        *Sender             `protobuf:"bytes,6,opt,name=sender,proto3" json:"sender,omitempty"`
	RecipientAccountUri           string              `protobuf:"bytes,7,opt,name=recipient_account_uri,json=recipientAccountUri,proto3" json:"recipient_account_uri,omitempty"`
	Recipient                     *Recipient          `protobuf:"bytes,8,opt,name=recipient,proto3" json:"recipient,omitempty"`
	TransferAmount                *TransferAmount     `protobuf:"bytes,9,opt,name=transfer_amount,json=transferAmount,proto3" json:"transfer_amount,omitempty"`
	Created                       string              `protobuf:"bytes,10,opt,name=created,proto3" json:"created,omitempty"`
	TransactionHistory            *TransactionHistory `protobuf:"bytes,11,opt,name=transaction_history,json=transactionHistory,proto3" json:"transaction_history,omitempty"`
	ReconciliationData            *ReconciliationData `protobuf:"bytes,25,opt,name=reconciliation_data,json=reconciliationData,proto3" json:"reconciliation_data,omitempty"`
	PaymentOriginationCountry     string              `protobuf:"bytes,12,opt,name=payment_origination_country,json=paymentOriginationCountry,proto3" json:"payment_origination_country,omitempty"`
	OriginalStatus                string              `protobuf:"bytes,13,opt,name=original_status,json=originalStatus,proto3" json:"original_status,omitempty"`
	Status                        string              `protobuf:"bytes,14,opt,name=status,proto3" json:"status,omitempty"`
	StatusTimestamp               string              `protobuf:"bytes,15,opt,name=status_timestamp,json=statusTimestamp,proto3" json:"status_timestamp,omitempty"`
	TransactionLocalDateTime      string              `protobuf:"bytes,16,opt,name=transaction_local_date_time,json=transactionLocalDateTime,proto3" json:"transaction_local_date_time,omitempty"`
	MastercardAssignedId          string              `protobuf:"bytes,17,opt,name=mastercard_assigned_id,json=mastercardAssignedId,proto3" json:"mastercard_assigned_id,omitempty"`
	FundingSource                 string              `protobuf:"bytes,18,opt,name=funding_source,json=fundingSource,proto3" json:"funding_source,omitempty"`
	RoutingTransitNumber          string              `protobuf:"bytes,19,opt,name=routing_transit_number,json=routingTransitNumber,proto3" json:"routing_transit_number,omitempty"`
	ProcessorId                   string              `protobuf:"bytes,20,opt,name=processor_id,json=processorId,proto3" json:"processor_id,omitempty"`
	Participant                   *Participant        `protobuf:"bytes,21,opt,name=participant,proto3" json:"participant,omitempty"`
	AdditionalMessage             string              `protobuf:"bytes,22,opt,name=additional_message,json=additionalMessage,proto3" json:"additional_message,omitempty"`
	ParticipationId               string              `protobuf:"bytes,23,opt,name=participation_id,json=participationId,proto3" json:"participation_id,omitempty"`
	InterchangeRateDesignator     string              `protobuf:"bytes,24,opt,name=interchange_rate_designator,json=interchangeRateDesignator,proto3" json:"interchange_rate_designator,omitempty"`
	XXX_NoUnkeyedLiteral          struct{}            `json:"-"`
	XXX_unrecognized              []byte              `json:"-"`
	XXX_sizecache                 int32               `json:"-"`
}

func (m *MerchantTransferResponse) Reset()         { *m = MerchantTransferResponse{} }
func (m *MerchantTransferResponse) String() string { return proto.CompactTextString(m) }
func (*MerchantTransferResponse) ProtoMessage()    {}
func (*MerchantTransferResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4ec760cea500d20, []int{23}
}

func (m *MerchantTransferResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantTransferResponse.Unmarshal(m, b)
}
func (m *MerchantTransferResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantTransferResponse.Marshal(b, m, deterministic)
}
func (m *MerchantTransferResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantTransferResponse.Merge(m, src)
}
func (m *MerchantTransferResponse) XXX_Size() int {
	return xxx_messageInfo_MerchantTransferResponse.Size(m)
}
func (m *MerchantTransferResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantTransferResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantTransferResponse proto.InternalMessageInfo

func (m *MerchantTransferResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MerchantTransferResponse) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

func (m *MerchantTransferResponse) GetTransferReference() string {
	if m != nil {
		return m.TransferReference
	}
	return ""
}

func (m *MerchantTransferResponse) GetPaymentTypeb() string {
	if m != nil {
		return m.PaymentTypeb
	}
	return ""
}

func (m *MerchantTransferResponse) GetSenderAccountUri() string {
	if m != nil {
		return m.SenderAccountUri
	}
	return ""
}

func (m *MerchantTransferResponse) GetDigitalAccountReferenceNumber() string {
	if m != nil {
		return m.DigitalAccountReferenceNumber
	}
	return ""
}

func (m *MerchantTransferResponse) GetSender() *Sender {
	if m != nil {
		return m.Sender
	}
	return nil
}

func (m *MerchantTransferResponse) GetRecipientAccountUri() string {
	if m != nil {
		return m.RecipientAccountUri
	}
	return ""
}

func (m *MerchantTransferResponse) GetRecipient() *Recipient {
	if m != nil {
		return m.Recipient
	}
	return nil
}

func (m *MerchantTransferResponse) GetTransferAmount() *TransferAmount {
	if m != nil {
		return m.TransferAmount
	}
	return nil
}

func (m *MerchantTransferResponse) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *MerchantTransferResponse) GetTransactionHistory() *TransactionHistory {
	if m != nil {
		return m.TransactionHistory
	}
	return nil
}

func (m *MerchantTransferResponse) GetReconciliationData() *ReconciliationData {
	if m != nil {
		return m.ReconciliationData
	}
	return nil
}

func (m *MerchantTransferResponse) GetPaymentOriginationCountry() string {
	if m != nil {
		return m.PaymentOriginationCountry
	}
	return ""
}

func (m *MerchantTransferResponse) GetOriginalStatus() string {
	if m != nil {
		return m.OriginalStatus
	}
	return ""
}

func (m *MerchantTransferResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *MerchantTransferResponse) GetStatusTimestamp() string {
	if m != nil {
		return m.StatusTimestamp
	}
	return ""
}

func (m *MerchantTransferResponse) GetTransactionLocalDateTime() string {
	if m != nil {
		return m.TransactionLocalDateTime
	}
	return ""
}

func (m *MerchantTransferResponse) GetMastercardAssignedId() string {
	if m != nil {
		return m.MastercardAssignedId
	}
	return ""
}

func (m *MerchantTransferResponse) GetFundingSource() string {
	if m != nil {
		return m.FundingSource
	}
	return ""
}

func (m *MerchantTransferResponse) GetRoutingTransitNumber() string {
	if m != nil {
		return m.RoutingTransitNumber
	}
	return ""
}

func (m *MerchantTransferResponse) GetProcessorId() string {
	if m != nil {
		return m.ProcessorId
	}
	return ""
}

func (m *MerchantTransferResponse) GetParticipant() *Participant {
	if m != nil {
		return m.Participant
	}
	return nil
}

func (m *MerchantTransferResponse) GetAdditionalMessage() string {
	if m != nil {
		return m.AdditionalMessage
	}
	return ""
}

func (m *MerchantTransferResponse) GetParticipationId() string {
	if m != nil {
		return m.ParticipationId
	}
	return ""
}

func (m *MerchantTransferResponse) GetInterchangeRateDesignator() string {
	if m != nil {
		return m.InterchangeRateDesignator
	}
	return ""
}

type TransactionHistory struct {
	ResourceType         string         `protobuf:"bytes,1,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	ItemCount            string         `protobuf:"bytes,2,opt,name=item_count,json=itemCount,proto3" json:"item_count,omitempty"`
	Data                 []*Transaction `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TransactionHistory) Reset()         { *m = TransactionHistory{} }
func (m *TransactionHistory) String() string { return proto.CompactTextString(m) }
func (*TransactionHistory) ProtoMessage()    {}
func (*TransactionHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4ec760cea500d20, []int{24}
}

func (m *TransactionHistory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionHistory.Unmarshal(m, b)
}
func (m *TransactionHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionHistory.Marshal(b, m, deterministic)
}
func (m *TransactionHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionHistory.Merge(m, src)
}
func (m *TransactionHistory) XXX_Size() int {
	return xxx_messageInfo_TransactionHistory.Size(m)
}
func (m *TransactionHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionHistory.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionHistory proto.InternalMessageInfo

func (m *TransactionHistory) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

func (m *TransactionHistory) GetItemCount() string {
	if m != nil {
		return m.ItemCount
	}
	return ""
}

func (m *TransactionHistory) GetData() []*Transaction {
	if m != nil {
		return m.Data
	}
	return nil
}

type Transaction struct {
	Id                       string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ResourceType             string             `protobuf:"bytes,2,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	AccountUri               string             `protobuf:"bytes,3,opt,name=account_uri,json=accountUri,proto3" json:"account_uri,omitempty"`
	TransactionAmount        *TransactionAmount `protobuf:"bytes,4,opt,name=transaction_amount,json=transactionAmount,proto3" json:"transaction_amount,omitempty"`
	Network                  string             `protobuf:"bytes,5,opt,name=network,proto3" json:"network,omitempty"`
	NetworkStatusCode        string             `protobuf:"bytes,6,opt,name=network_status_code,json=networkStatusCode,proto3" json:"network_status_code,omitempty"`
	NetworkStatusDescription string             `protobuf:"bytes,7,opt,name=network_status_description,json=networkStatusDescription,proto3" json:"network_status_description,omitempty"`
	FundsAvailability        string             `protobuf:"bytes,8,opt,name=funds_availability,json=fundsAvailability,proto3" json:"funds_availability,omitempty"`
	Type                     string             `protobuf:"bytes,9,opt,name=type,proto3" json:"type,omitempty"`
	CreateTimestamp          string             `protobuf:"bytes,10,opt,name=create_timestamp,json=createTimestamp,proto3" json:"create_timestamp,omitempty"`
	Status                   string             `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	StatusReason             string             `protobuf:"bytes,12,opt,name=status_reason,json=statusReason,proto3" json:"status_reason,omitempty"`
	StatusTimestamp          string             `protobuf:"bytes,13,opt,name=status_timestamp,json=statusTimestamp,proto3" json:"status_timestamp,omitempty"`
	RetrievalReference       string             `protobuf:"bytes,14,opt,name=retrieval_reference,json=retrievalReference,proto3" json:"retrieval_reference,omitempty"`
	SystemTraceAuditNumber   string             `protobuf:"bytes,15,opt,name=system_trace_audit_number,json=systemTraceAuditNumber,proto3" json:"system_trace_audit_number,omitempty"`
	SwitchSerialNumber       string             `protobuf:"bytes,16,opt,name=switch_serial_number,json=switchSerialNumber,proto3" json:"switch_serial_number,omitempty"`
	UniqueReferenceNumber    string             `protobuf:"bytes,17,opt,name=unique_reference_number,json=uniqueReferenceNumber,proto3" json:"unique_reference_number,omitempty"`
	AuthorizationId          string             `protobuf:"bytes,18,opt,name=authorization_id,json=authorizationId,proto3" json:"authorization_id,omitempty"`
	QrData                   string             `protobuf:"bytes,19,opt,name=qr_data,json=qrData,proto3" json:"qr_data,omitempty"`
	ConvenienceIndicator     string             `protobuf:"bytes,20,opt,name=convenience_indicator,json=convenienceIndicator,proto3" json:"convenience_indicator,omitempty"`
	PaymentAccountReference  string             `protobuf:"bytes,21,opt,name=payment_account_reference,json=paymentAccountReference,proto3" json:"payment_account_reference,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}           `json:"-"`
	XXX_unrecognized         []byte             `json:"-"`
	XXX_sizecache            int32              `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}
func (*Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4ec760cea500d20, []int{25}
}

func (m *Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction.Unmarshal(m, b)
}
func (m *Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction.Marshal(b, m, deterministic)
}
func (m *Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction.Merge(m, src)
}
func (m *Transaction) XXX_Size() int {
	return xxx_messageInfo_Transaction.Size(m)
}
func (m *Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction proto.InternalMessageInfo

func (m *Transaction) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Transaction) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

func (m *Transaction) GetAccountUri() string {
	if m != nil {
		return m.AccountUri
	}
	return ""
}

func (m *Transaction) GetTransactionAmount() *TransactionAmount {
	if m != nil {
		return m.TransactionAmount
	}
	return nil
}

func (m *Transaction) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *Transaction) GetNetworkStatusCode() string {
	if m != nil {
		return m.NetworkStatusCode
	}
	return ""
}

func (m *Transaction) GetNetworkStatusDescription() string {
	if m != nil {
		return m.NetworkStatusDescription
	}
	return ""
}

func (m *Transaction) GetFundsAvailability() string {
	if m != nil {
		return m.FundsAvailability
	}
	return ""
}

func (m *Transaction) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Transaction) GetCreateTimestamp() string {
	if m != nil {
		return m.CreateTimestamp
	}
	return ""
}

func (m *Transaction) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Transaction) GetStatusReason() string {
	if m != nil {
		return m.StatusReason
	}
	return ""
}

func (m *Transaction) GetStatusTimestamp() string {
	if m != nil {
		return m.StatusTimestamp
	}
	return ""
}

func (m *Transaction) GetRetrievalReference() string {
	if m != nil {
		return m.RetrievalReference
	}
	return ""
}

func (m *Transaction) GetSystemTraceAuditNumber() string {
	if m != nil {
		return m.SystemTraceAuditNumber
	}
	return ""
}

func (m *Transaction) GetSwitchSerialNumber() string {
	if m != nil {
		return m.SwitchSerialNumber
	}
	return ""
}

func (m *Transaction) GetUniqueReferenceNumber() string {
	if m != nil {
		return m.UniqueReferenceNumber
	}
	return ""
}

func (m *Transaction) GetAuthorizationId() string {
	if m != nil {
		return m.AuthorizationId
	}
	return ""
}

func (m *Transaction) GetQrData() string {
	if m != nil {
		return m.QrData
	}
	return ""
}

func (m *Transaction) GetConvenienceIndicator() string {
	if m != nil {
		return m.ConvenienceIndicator
	}
	return ""
}

func (m *Transaction) GetPaymentAccountReference() string {
	if m != nil {
		return m.PaymentAccountReference
	}
	return ""
}

type ErrorResponse struct {
	Source               string   `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	ReasonCode           string   `protobuf:"bytes,2,opt,name=reason_code,json=reasonCode,proto3" json:"reason_code,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ErrorResponse) Reset()         { *m = ErrorResponse{} }
func (m *ErrorResponse) String() string { return proto.CompactTextString(m) }
func (*ErrorResponse) ProtoMessage()    {}
func (*ErrorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4ec760cea500d20, []int{26}
}

func (m *ErrorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorResponse.Unmarshal(m, b)
}
func (m *ErrorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorResponse.Marshal(b, m, deterministic)
}
func (m *ErrorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorResponse.Merge(m, src)
}
func (m *ErrorResponse) XXX_Size() int {
	return xxx_messageInfo_ErrorResponse.Size(m)
}
func (m *ErrorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorResponse proto.InternalMessageInfo

func (m *ErrorResponse) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *ErrorResponse) GetReasonCode() string {
	if m != nil {
		return m.ReasonCode
	}
	return ""
}

func (m *ErrorResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*MastercardRequest)(nil), "mastercard.MastercardRequest")
	proto.RegisterType((*MastercardReply)(nil), "mastercard.MastercardReply")
	proto.RegisterType((*MerchantIDs)(nil), "mastercard.MerchantIDs")
	proto.RegisterType((*Merchant)(nil), "mastercard.Merchant")
	proto.RegisterType((*CountrySubdivision)(nil), "mastercard.CountrySubdivision")
	proto.RegisterType((*Country)(nil), "mastercard.Country")
	proto.RegisterType((*AdditionalMerchantData)(nil), "mastercard.AdditionalMerchantData")
	proto.RegisterType((*Address)(nil), "mastercard.Address")
	proto.RegisterType((*TokenCryptogram)(nil), "mastercard.TokenCryptogram")
	proto.RegisterType((*MastercardCurrencyConversionRequest)(nil), "mastercard.MastercardCurrencyConversionRequest")
	proto.RegisterType((*MastercardCurrencyConversionReply)(nil), "mastercard.MastercardCurrencyConversionReply")
	proto.RegisterType((*CurrencyResponse)(nil), "mastercard.CurrencyResponse")
	proto.RegisterType((*CurrencyDataResponse)(nil), "mastercard.CurrencyDataResponse")
	proto.RegisterType((*Sender)(nil), "mastercard.Sender")
	proto.RegisterType((*MerchantTransfer)(nil), "mastercard.MerchantTransfer")
	proto.RegisterType((*Recipient)(nil), "mastercard.Recipient")
	proto.RegisterType((*TransferAmount)(nil), "mastercard.TransferAmount")
	proto.RegisterType((*TransactionAmount)(nil), "mastercard.TransactionAmount")
	proto.RegisterType((*Participant)(nil), "mastercard.Participant")
	proto.RegisterType((*CustomField)(nil), "mastercard.CustomField")
	proto.RegisterType((*ReconciliationData)(nil), "mastercard.ReconciliationData")
	proto.RegisterType((*MerchantTransferFundingAndPaymentRequest)(nil), "mastercard.MerchantTransferFundingAndPaymentRequest")
	proto.RegisterType((*MerchantTransferFundingAndPaymentResponse)(nil), "mastercard.MerchantTransferFundingAndPaymentResponse")
	proto.RegisterType((*MerchantTransferResponse)(nil), "mastercard.MerchantTransferResponse")
	proto.RegisterType((*TransactionHistory)(nil), "mastercard.TransactionHistory")
	proto.RegisterType((*Transaction)(nil), "mastercard.Transaction")
	proto.RegisterType((*ErrorResponse)(nil), "mastercard.ErrorResponse")
}

func init() { proto.RegisterFile("proto/mastercard.proto", fileDescriptor_d4ec760cea500d20) }

var fileDescriptor_d4ec760cea500d20 = []byte{
	// 2401 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x59, 0x4b, 0x73, 0x1b, 0xb9,
	0x11, 0x2e, 0x8a, 0xb2, 0x24, 0x36, 0xf5, 0x20, 0xa1, 0xd7, 0x58, 0xb6, 0xd7, 0xf2, 0x78, 0xb3,
	0x91, 0x37, 0xb1, 0xb4, 0x96, 0x9d, 0x87, 0xb7, 0x36, 0xa9, 0x92, 0xa9, 0xb5, 0xa3, 0x8a, 0xbd,
	0xeb, 0x8c, 0x94, 0x54, 0xa5, 0x2a, 0xa9, 0x29, 0x70, 0x06, 0xa2, 0x50, 0x1e, 0xce, 0xd0, 0x18,
	0x50, 0x5e, 0xe6, 0x90, 0x5b, 0xee, 0xa9, 0xca, 0x29, 0x39, 0xe4, 0x98, 0x7f, 0x90, 0x43, 0x72,
	0xcf, 0x1f, 0xc8, 0x0f, 0xc8, 0xbf, 0xc8, 0x3d, 0x05, 0x34, 0x30, 0x03, 0x3e, 0x25, 0x7b, 0xaf,
	0xb9, 0x11, 0xfd, 0x00, 0x30, 0x8d, 0xee, 0xaf, 0x3f, 0x80, 0xb0, 0xd5, 0x13, 0x99, 0xcc, 0x0e,
	0xba, 0x34, 0x97, 0x4c, 0x44, 0x54, 0xc4, 0xfb, 0x5a, 0x40, 0xa0, 0x94, 0xec, 0xdc, 0xed, 0x64,
	0x59, 0x27, 0x61, 0x07, 0x5a, 0xd3, 0xee, 0x9f, 0x1f, 0x48, 0xde, 0x65, 0xb9, 0xa4, 0xdd, 0x1e,
	0x1a, 0xfb, 0x3f, 0x87, 0xe6, 0xab, 0xc2, 0x3c, 0x60, 0x6f, 0xfb, 0x2c, 0x97, 0xe4, 0x23, 0x80,
	0x57, 0x4c, 0x44, 0x17, 0x34, 0x95, 0x27, 0xc7, 0x5e, 0x65, 0xb7, 0xb2, 0x57, 0x0b, 0x1c, 0x09,
	0xd9, 0x82, 0x85, 0x53, 0x46, 0x45, 0x74, 0xe1, 0xcd, 0xed, 0x56, 0xf6, 0xaa, 0x81, 0x19, 0xf9,
	0x2f, 0x61, 0xcd, 0x9d, 0xac, 0x97, 0x0c, 0xc8, 0x53, 0xa8, 0x77, 0x0b, 0xc7, 0x5c, 0xcf, 0x55,
	0x3f, 0xdc, 0xde, 0x77, 0x36, 0x5d, 0xce, 0x9b, 0x07, 0xae, 0xad, 0xff, 0x6b, 0xa8, 0x3b, 0x3a,
	0xe2, 0xc1, 0xe2, 0x2b, 0x96, 0xe7, 0xb4, 0xc3, 0xcc, 0x8e, 0xec, 0x90, 0x7c, 0x06, 0x4b, 0xd6,
	0xd0, 0x9b, 0xdb, 0xad, 0xee, 0xd5, 0x0f, 0x37, 0x26, 0x2d, 0x10, 0x14, 0x56, 0xfe, 0xbf, 0xaa,
	0xa5, 0x0b, 0x79, 0x08, 0x8b, 0x47, 0x71, 0x2c, 0x58, 0x6e, 0xb7, 0xb7, 0xee, 0x7a, 0x1b, 0x55,
	0x60, 0x6d, 0xc8, 0x2e, 0xd4, 0x5f, 0x5f, 0x64, 0x29, 0xfb, 0xaa, 0xdf, 0x6d, 0x33, 0xa1, 0x23,
	0x50, 0x0b, 0x5c, 0x11, 0xb9, 0x0d, 0xb5, 0x67, 0x82, 0xa6, 0xf1, 0x57, 0xb4, 0xcb, 0xbc, 0xaa,
	0xd6, 0x97, 0x02, 0xf2, 0x29, 0x34, 0xec, 0xd2, 0x2d, 0x2a, 0x59, 0x27, 0x13, 0x03, 0x6f, 0x5e,
	0x1b, 0x8d, 0xc9, 0xc9, 0x1e, 0xac, 0x59, 0xd9, 0x71, 0x9b, 0xea, 0xf9, 0x6e, 0x68, 0xd3, 0x51,
	0x31, 0xf9, 0x04, 0x56, 0x8f, 0x59, 0x1e, 0x09, 0xde, 0x93, 0x99, 0x38, 0x63, 0xdf, 0x48, 0x6f,
	0x41, 0x1b, 0x8e, 0x48, 0xc9, 0x3e, 0x90, 0x97, 0xac, 0x43, 0x93, 0x56, 0x26, 0x7a, 0x99, 0xa0,
	0x92, 0xe9, 0x49, 0x17, 0xb5, 0xed, 0x04, 0x8d, 0x8a, 0x7a, 0x2b, 0xeb, 0x76, 0x59, 0x2a, 0xbd,
	0x25, 0x8c, 0xba, 0x19, 0xaa, 0x24, 0x79, 0x99, 0x45, 0x54, 0xf2, 0x2c, 0x3d, 0x39, 0xf6, 0x6a,
	0x3a, 0x11, 0x1c, 0x89, 0x5a, 0xe9, 0x34, 0x4b, 0xd8, 0x6b, 0x91, 0xf5, 0x04, 0x67, 0x32, 0x13,
	0x7a, 0x25, 0xc0, 0x95, 0xc6, 0x35, 0xe4, 0x10, 0x36, 0x5e, 0x51, 0x19, 0x5d, 0xb4, 0xb2, 0xf4,
	0x9c, 0xc7, 0x2c, 0x8d, 0xd8, 0x69, 0x94, 0x09, 0xe6, 0xd5, 0xf5, 0xcc, 0x13, 0x75, 0xfe, 0x17,
	0x40, 0x5a, 0x59, 0x3f, 0x95, 0x62, 0x70, 0xda, 0x6f, 0xc7, 0xfc, 0x92, 0xe7, 0x3c, 0x4b, 0x09,
	0x81, 0xf9, 0x54, 0xad, 0x85, 0x69, 0xa2, 0x7f, 0x2b, 0x59, 0x94, 0xc5, 0xcc, 0x1c, 0x97, 0xfe,
	0xed, 0x3f, 0x52, 0xdf, 0xa6, 0xbd, 0xaf, 0xed, 0x72, 0x09, 0x5b, 0x47, 0x71, 0xcc, 0xd5, 0x27,
	0xd2, 0xa4, 0x38, 0x03, 0x2a, 0x29, 0x79, 0x02, 0x5b, 0x3d, 0x3a, 0x50, 0x91, 0x09, 0xcf, 0x69,
	0xc4, 0x13, 0x2e, 0xa9, 0xcc, 0x44, 0xc8, 0x63, 0x33, 0xe7, 0x86, 0xd1, 0x3e, 0x2f, 0x95, 0x27,
	0x31, 0xf9, 0x04, 0xd6, 0xf2, 0x7e, 0x3b, 0xb4, 0x69, 0xaf, 0xcc, 0x71, 0xb9, 0x95, 0xbc, 0xdf,
	0x2e, 0xb2, 0x3f, 0xf6, 0xff, 0x5e, 0x29, 0x92, 0x94, 0x6c, 0xc0, 0x8d, 0x84, 0xa7, 0xec, 0x91,
	0x99, 0x18, 0x07, 0x56, 0x7a, 0x68, 0xfc, 0x71, 0xa0, 0xbf, 0x81, 0xcb, 0x81, 0xc9, 0x42, 0xfd,
	0x9b, 0x1c, 0xc0, 0x7a, 0x84, 0x9f, 0x1d, 0xe6, 0x65, 0xd4, 0x4c, 0x0e, 0x92, 0x68, 0x3c, 0x9e,
	0x77, 0xa1, 0xde, 0xcb, 0x72, 0x49, 0x93, 0x50, 0xc7, 0x03, 0x33, 0x10, 0x50, 0xd4, 0xca, 0x62,
	0x9d, 0x24, 0xc6, 0xcd, 0x64, 0x9d, 0x1d, 0xfa, 0x6f, 0x60, 0xed, 0x2c, 0x7b, 0xc3, 0xd2, 0x96,
	0x18, 0xf4, 0x64, 0xd6, 0x11, 0xb4, 0xab, 0xb6, 0x24, 0x07, 0xbd, 0x22, 0xd4, 0xea, 0xb7, 0xda,
	0xfc, 0x25, 0x4d, 0xfa, 0x36, 0xd6, 0x38, 0x20, 0xfb, 0xb0, 0xde, 0xa3, 0x69, 0x98, 0x2b, 0x54,
	0x4a, 0x23, 0x16, 0xa6, 0x58, 0x71, 0xf8, 0x2d, 0xcd, 0x1e, 0x4d, 0x4f, 0x8d, 0x06, 0xeb, 0xce,
	0xff, 0x47, 0x05, 0xee, 0x97, 0xf8, 0xd3, 0xea, 0x0b, 0xc1, 0xd2, 0x68, 0xd0, 0xca, 0xd2, 0x4b,
	0x26, 0xd4, 0x87, 0x58, 0x78, 0xdb, 0x82, 0x85, 0xf3, 0x6f, 0x8e, 0xa9, 0xb4, 0x7b, 0x30, 0x23,
	0x55, 0xb7, 0x52, 0xd0, 0x34, 0x57, 0x9e, 0x66, 0x27, 0xa5, 0x40, 0x55, 0x58, 0x24, 0xe2, 0x8b,
	0x24, 0x7e, 0xc6, 0x93, 0x44, 0x9b, 0xe0, 0x46, 0x46, 0xa4, 0x2a, 0x18, 0x6d, 0x9a, 0xbe, 0x79,
	0xce, 0x98, 0x0e, 0x69, 0x35, 0xb0, 0x43, 0xb2, 0x03, 0x4b, 0x7a, 0xba, 0xa3, 0xae, 0xd4, 0x41,
	0x9c, 0x0b, 0x8a, 0xb1, 0xff, 0x5b, 0xb8, 0x37, 0x7b, 0xeb, 0x0a, 0x4c, 0x7f, 0x0c, 0x4b, 0x82,
	0xe5, 0xbd, 0x2c, 0xcd, 0x99, 0x81, 0xaa, 0xdb, 0x2e, 0x54, 0x59, 0xb7, 0xc0, 0xd8, 0x04, 0x85,
	0xb5, 0xff, 0x9f, 0x0a, 0x34, 0x46, 0xd5, 0xd3, 0x92, 0x5e, 0x9f, 0xce, 0x9c, 0x73, 0x3a, 0xbb,
	0x50, 0x8f, 0x0d, 0x8a, 0xa8, 0x44, 0xc1, 0xcf, 0x76, 0x45, 0x64, 0x1f, 0xe6, 0x63, 0x15, 0xcf,
	0x79, 0xbd, 0xa9, 0x9d, 0x7d, 0xec, 0x3a, 0xfb, 0xb6, 0xeb, 0xec, 0x9f, 0xd9, 0xae, 0x13, 0x68,
	0xbb, 0x59, 0x91, 0x20, 0x4f, 0xf4, 0x5c, 0x54, 0x67, 0x52, 0xfd, 0x70, 0x77, 0xd2, 0x07, 0xaa,
	0x82, 0x2b, 0x3e, 0x52, 0x5b, 0xfb, 0xff, 0x9c, 0x83, 0x8d, 0x49, 0x6a, 0x7d, 0x6c, 0x65, 0x18,
	0xed, 0xa1, 0xcf, 0x05, 0x23, 0x52, 0xf2, 0x31, 0xac, 0x94, 0x07, 0xa9, 0xf6, 0x35, 0xa7, 0xcd,
	0x86, 0x85, 0x43, 0x1b, 0xaf, 0x8e, 0x6c, 0xbc, 0x4c, 0xab, 0xf9, 0xe9, 0x69, 0x75, 0xe3, 0xea,
	0xb4, 0x5a, 0xb8, 0x2a, 0xad, 0x16, 0xf5, 0xc2, 0x45, 0x5a, 0xdd, 0x86, 0x1a, 0x13, 0x22, 0x13,
	0xaa, 0x14, 0x35, 0x48, 0x57, 0x83, 0x52, 0x40, 0x7c, 0x58, 0xd6, 0x03, 0xdb, 0x3b, 0x6b, 0x7a,
	0xf6, 0x21, 0x99, 0xff, 0xe7, 0xaa, 0x6a, 0xe8, 0x69, 0xcc, 0x04, 0xb9, 0x03, 0x70, 0xce, 0x45,
	0x2e, 0x43, 0x27, 0x33, 0x6a, 0x5a, 0xa2, 0x41, 0xfa, 0x2e, 0xd4, 0xbb, 0x3c, 0x8e, 0x13, 0x86,
	0x7a, 0xcc, 0x12, 0x40, 0x91, 0x36, 0xb8, 0x05, 0xb5, 0x84, 0x5a, 0x77, 0xcc, 0x94, 0x25, 0x25,
	0xd0, 0xca, 0x87, 0xb0, 0x48, 0x4d, 0xa7, 0x9d, 0x9f, 0xd1, 0x69, 0x69, 0x09, 0x74, 0x3d, 0xd5,
	0x56, 0x4d, 0xd0, 0x70, 0xa0, 0xa4, 0xac, 0x4b, 0x79, 0x62, 0xe2, 0x84, 0x03, 0xf2, 0x08, 0x36,
	0x68, 0x5f, 0x5e, 0xb0, 0x54, 0x72, 0xec, 0x40, 0x21, 0x02, 0x0a, 0x76, 0xb6, 0xf5, 0x61, 0xdd,
	0xaf, 0x34, 0xbc, 0x3c, 0x87, 0x86, 0x54, 0xd8, 0x14, 0x46, 0x05, 0x38, 0xe9, 0xf0, 0xd5, 0x0f,
	0x6f, 0xb9, 0xdb, 0x1a, 0xc1, 0xaf, 0x60, 0x4d, 0x8e, 0x00, 0xda, 0x6f, 0xc0, 0xa3, 0x45, 0x4f,
	0x28, 0xa1, 0x5c, 0x27, 0x71, 0x4d, 0xcf, 0xe7, 0x8f, 0x7c, 0xe6, 0x84, 0xfe, 0x11, 0x6c, 0xd1,
	0x89, 0x72, 0xff, 0xaf, 0xb5, 0x92, 0x2f, 0x9c, 0xa9, 0xac, 0x39, 0x67, 0x82, 0x3c, 0x04, 0x22,
	0xcd, 0xef, 0x50, 0xb0, 0x73, 0xa6, 0xd2, 0xde, 0x9e, 0x56, 0xd3, 0x6a, 0x02, 0xab, 0x20, 0xf7,
	0x60, 0xd9, 0xf6, 0x26, 0xa7, 0xb8, 0xeb, 0x46, 0x76, 0xa6, 0x6a, 0xfc, 0xa7, 0x70, 0xcb, 0x9a,
	0x64, 0x82, 0x77, 0x78, 0x8a, 0x41, 0xb4, 0xb0, 0x8e, 0x27, 0x79, 0xd3, 0x98, 0x7c, 0x5d, 0x5a,
	0xd8, 0x06, 0xfa, 0x13, 0xb8, 0xa5, 0xd7, 0xa5, 0x91, 0xf6, 0x4b, 0xb2, 0x88, 0x26, 0x2a, 0x04,
	0x2c, 0x54, 0x8c, 0xd3, 0x54, 0x84, 0xe7, 0x98, 0x28, 0xa6, 0x90, 0xa8, 0xfa, 0x50, 0xd8, 0x40,
	0x5a, 0xb0, 0x56, 0x7c, 0x10, 0xed, 0xaa, 0x39, 0xf5, 0xa1, 0x2b, 0x2c, 0x71, 0x8f, 0xc2, 0x98,
	0x1c, 0x69, 0x8b, 0x60, 0x55, 0x0e, 0x8d, 0xc9, 0xf7, 0x81, 0xe4, 0x3a, 0x8b, 0x43, 0x1a, 0xe9,
	0x8d, 0x87, 0x7d, 0xc1, 0x4d, 0x9a, 0x34, 0x50, 0x73, 0x84, 0x8a, 0x5f, 0x0a, 0x4e, 0x3e, 0x85,
	0x05, 0x94, 0xe9, 0x1c, 0xa9, 0x1f, 0x12, 0x77, 0x25, 0xac, 0x86, 0xc0, 0x58, 0x90, 0x43, 0xd8,
	0x14, 0x2c, 0xe2, 0x3d, 0xae, 0xe2, 0xe3, 0x4e, 0x8e, 0x9c, 0x68, 0xbd, 0x50, 0x3a, 0xf3, 0x3f,
	0x86, 0x5a, 0x21, 0x36, 0x79, 0xb0, 0xe9, 0x2e, 0x11, 0x58, 0x65, 0x50, 0xda, 0x91, 0xaf, 0x41,
	0xcd, 0x95, 0xa5, 0x8a, 0x23, 0xe0, 0x09, 0xe8, 0x34, 0x02, 0xed, 0xfe, 0xd1, 0x88, 0xbb, 0x63,
	0xa6, 0x53, 0x88, 0x88, 0x31, 0x99, 0xa2, 0x25, 0xa5, 0x53, 0x48, 0xf3, 0x9c, 0x77, 0x52, 0x16,
	0x2b, 0x9e, 0x51, 0x47, 0x5a, 0x52, 0x6a, 0x8f, 0x8c, 0xf2, 0x24, 0x56, 0x5e, 0x22, 0xeb, 0x4b,
	0x9e, 0x76, 0x42, 0x1d, 0x63, 0x2e, 0x6d, 0xf3, 0x5d, 0x46, 0x2f, 0xa3, 0x3d, 0x43, 0xa5, 0xe1,
	0xbd, 0x2a, 0xcd, 0x44, 0x16, 0xb1, 0x3c, 0x47, 0xe2, 0xb3, 0x62, 0xd2, 0xcc, 0xca, 0x4e, 0x62,
	0x95, 0xb8, 0x43, 0xb5, 0x82, 0x98, 0xb4, 0x8a, 0x89, 0xeb, 0x56, 0x00, 0x32, 0xfb, 0x07, 0xd0,
	0xe8, 0x51, 0x21, 0x79, 0xc4, 0x7b, 0x18, 0x0d, 0x1e, 0x7b, 0x6b, 0x48, 0x80, 0x87, 0xe4, 0x38,
	0xb3, 0x46, 0xf4, 0x94, 0x6b, 0xae, 0x60, 0x92, 0xa8, 0x81, 0x33, 0x3b, 0x1a, 0x93, 0x2b, 0x8f,
	0x61, 0xd3, 0x35, 0xe7, 0x69, 0xac, 0xb0, 0x21, 0x13, 0x5e, 0x13, 0x3f, 0xd0, 0x51, 0x9e, 0x58,
	0x9d, 0x2a, 0x12, 0x9e, 0x4a, 0x2c, 0xc6, 0x0e, 0x0b, 0x15, 0x49, 0x0e, 0x63, 0xa6, 0xa2, 0xa6,
	0x5d, 0x09, 0x16, 0x89, 0x63, 0xa2, 0x3a, 0xcb, 0x71, 0x61, 0x40, 0xb6, 0x61, 0xf1, 0xad, 0xc0,
	0x13, 0x5d, 0xc7, 0x16, 0xf1, 0x56, 0xe8, 0x53, 0xfa, 0x21, 0x6c, 0xf7, 0x53, 0xfe, 0xb6, 0xcf,
	0xca, 0x6a, 0xb6, 0x01, 0xdf, 0xd0, 0x86, 0x9b, 0xa8, 0x2e, 0x4a, 0xda, 0x44, 0xfc, 0x29, 0xd4,
	0x8b, 0x38, 0xa4, 0xd2, 0xdb, 0x1c, 0xbf, 0x5d, 0xbd, 0x2e, 0xd5, 0x81, 0x6b, 0x4b, 0x5e, 0xc0,
	0x6e, 0xcc, 0x3b, 0x5c, 0xb1, 0x3a, 0x9b, 0xd0, 0x63, 0x6b, 0x6f, 0xe9, 0xb5, 0xef, 0x18, 0x3b,
	0x93, 0xdb, 0x23, 0x7b, 0xf0, 0xff, 0x5d, 0x85, 0x5a, 0x91, 0xcb, 0xff, 0xef, 0x1f, 0xef, 0xdf,
	0x3f, 0x54, 0x89, 0xda, 0xa6, 0x11, 0x99, 0x9b, 0x1f, 0x32, 0xed, 0x9a, 0x29, 0xd1, 0x91, 0x6b,
	0xa1, 0xee, 0xeb, 0xb3, 0xba, 0x0e, 0x7c, 0xeb, 0xae, 0xf3, 0x0c, 0x56, 0x87, 0xc1, 0xb6, 0xa4,
	0xe8, 0x15, 0x97, 0xa2, 0xef, 0xc0, 0x52, 0x64, 0x58, 0x97, 0x39, 0xcc, 0x62, 0xec, 0x7f, 0x09,
	0xcd, 0xb3, 0x12, 0xef, 0x3f, 0x78, 0x1a, 0x06, 0x75, 0x27, 0x89, 0xc9, 0x1e, 0x34, 0x10, 0xca,
	0xa2, 0x88, 0xf5, 0x86, 0x6e, 0x58, 0xab, 0x1a, 0xc4, 0x8c, 0xf8, 0x24, 0x56, 0xed, 0x60, 0xd8,
	0xd2, 0x49, 0xb9, 0x86, 0x6b, 0xab, 0x72, 0xcb, 0xff, 0x11, 0xd4, 0x5b, 0xfd, 0x5c, 0x66, 0xdd,
	0xe7, 0x9c, 0x25, 0xf1, 0x44, 0x6e, 0x3c, 0xf1, 0x96, 0xe2, 0xbf, 0x06, 0x32, 0x8e, 0xc5, 0xe4,
	0x73, 0x58, 0x8e, 0xf4, 0x74, 0xe1, 0xb9, 0x9a, 0xcf, 0xab, 0xe8, 0x77, 0x89, 0xed, 0x61, 0x36,
	0x5b, 0x2c, 0x17, 0xd4, 0xa3, 0x72, 0xe0, 0xff, 0xa9, 0x02, 0x7b, 0xa3, 0x2d, 0xff, 0x79, 0x3f,
	0x8d, 0x79, 0xda, 0x39, 0x4a, 0xe3, 0xd7, 0xd8, 0x83, 0xed, 0x65, 0xe6, 0x36, 0xd4, 0x54, 0x59,
	0xa7, 0x4c, 0x9c, 0xd8, 0x40, 0x94, 0x02, 0x72, 0x02, 0xcd, 0x22, 0x35, 0x6c, 0xb7, 0xd4, 0xdb,
	0x1f, 0xb9, 0x3a, 0x8c, 0x2e, 0x17, 0x34, 0xba, 0x23, 0x12, 0xff, 0xf7, 0xf0, 0xe0, 0x1a, 0x9b,
	0x32, 0xac, 0xfb, 0x17, 0x93, 0xd6, 0xc5, 0x2b, 0xcb, 0xc7, 0x33, 0xd7, 0xb5, 0xac, 0x7e, 0x7c,
	0xfd, 0xbf, 0x01, 0x78, 0xd3, 0xcc, 0xc9, 0x2a, 0xcc, 0x15, 0x79, 0x30, 0xc7, 0x63, 0x72, 0x1f,
	0x56, 0x04, 0xcb, 0xb3, 0xbe, 0x88, 0x98, 0x4b, 0x79, 0x96, 0xad, 0x50, 0x73, 0x9e, 0xc9, 0x2c,
	0xaa, 0x3a, 0x8d, 0x45, 0xdd, 0x87, 0x15, 0x97, 0x45, 0xb5, 0xbd, 0x1d, 0x9c, 0xd3, 0xa1, 0x51,
	0xed, 0x29, 0x1c, 0x64, 0x7e, 0x0a, 0x07, 0xb9, 0x0e, 0x08, 0xdf, 0xb8, 0x06, 0x08, 0x3b, 0x64,
	0x66, 0xe1, 0xc3, 0xc9, 0xcc, 0xe2, 0x35, 0xc9, 0xcc, 0xd2, 0x35, 0xc9, 0xcc, 0x04, 0x52, 0x57,
	0x7b, 0x6f, 0x52, 0xe7, 0xc1, 0x62, 0x24, 0x18, 0x95, 0x2c, 0x36, 0x6f, 0x47, 0x76, 0xa8, 0xb8,
	0x92, 0x4b, 0x39, 0x2f, 0x78, 0x2e, 0x33, 0x31, 0xd0, 0xbc, 0x66, 0x84, 0x2b, 0x39, 0x30, 0xf4,
	0x33, 0xb4, 0x0a, 0x88, 0x1c, 0x93, 0x4d, 0x23, 0x5f, 0x37, 0x3f, 0x98, 0x7c, 0x5d, 0x41, 0xaa,
	0x97, 0xaf, 0x22, 0xd5, 0xdf, 0x85, 0x35, 0xe3, 0x97, 0x84, 0xb9, 0xa4, 0xb2, 0x9f, 0x1b, 0x4e,
	0xb5, 0x6a, 0xc5, 0xa7, 0x5a, 0xaa, 0xae, 0x9e, 0x46, 0x8f, 0x54, 0xca, 0x8c, 0x14, 0x7f, 0xc2,
	0x5f, 0x61, 0xf1, 0xee, 0x6b, 0xf9, 0x13, 0xca, 0x8b, 0x8b, 0xf9, 0x55, 0x04, 0xbe, 0x71, 0x05,
	0x81, 0x9f, 0xce, 0x33, 0x9b, 0x33, 0x78, 0xe6, 0x77, 0x60, 0xf5, 0x1c, 0x31, 0x24, 0xc4, 0xba,
	0x34, 0x1c, 0x6a, 0xc5, 0x48, 0x4f, 0xb5, 0x70, 0x06, 0x1d, 0x5d, 0x7f, 0x0f, 0x3a, 0xba, 0x31,
	0x4e, 0x47, 0xbf, 0x05, 0x7f, 0x9a, 0xcc, 0x64, 0xb7, 0xde, 0x87, 0xc9, 0x6e, 0x4f, 0x66, 0xb2,
	0x57, 0xb0, 0x4c, 0xef, 0x0a, 0x96, 0xe9, 0xff, 0xa1, 0x02, 0x64, 0x3c, 0xe3, 0xc7, 0x21, 0xb1,
	0x32, 0x01, 0x12, 0xef, 0x00, 0x70, 0xc9, 0xba, 0x98, 0xa2, 0xf6, 0x0d, 0x4c, 0x49, 0x74, 0x4a,
	0x92, 0xef, 0x99, 0xb7, 0x99, 0xea, 0x78, 0x37, 0x73, 0x56, 0x34, 0x4f, 0x32, 0x7f, 0x59, 0x84,
	0xba, 0x23, 0xfd, 0x30, 0x8c, 0xbe, 0x0b, 0x75, 0x17, 0xa2, 0x10, 0x9c, 0x81, 0x96, 0xc8, 0xf4,
	0x12, 0xdc, 0x52, 0xb6, 0x38, 0x83, 0xf4, 0xf0, 0xce, 0x94, 0x0d, 0x1a, 0xa8, 0x69, 0xca, 0x31,
	0x7a, 0xe2, 0xc1, 0x62, 0xca, 0xe4, 0xbb, 0x4c, 0xbc, 0x31, 0xb8, 0x6b, 0x87, 0x64, 0x1f, 0xd6,
	0xcd, 0x4f, 0x53, 0x8a, 0x48, 0xd1, 0x90, 0x44, 0x36, 0x8d, 0x0a, 0xcb, 0x51, 0xf3, 0xb3, 0x2f,
	0x60, 0x67, 0xc4, 0xde, 0x7d, 0x43, 0x43, 0xa8, 0xf5, 0x86, 0xdc, 0x8e, 0x9d, 0x07, 0xb5, 0x87,
	0x40, 0x54, 0x09, 0xe4, 0x21, 0xbd, 0xa4, 0x3c, 0xa1, 0x6d, 0x9e, 0x70, 0x39, 0x30, 0xb7, 0xcd,
	0xa6, 0xd6, 0x1c, 0x39, 0x8a, 0xe2, 0xd5, 0xae, 0xe6, 0xbc, 0xda, 0x3d, 0x80, 0x06, 0x22, 0xa5,
	0x53, 0xfb, 0x88, 0xa0, 0x6b, 0x28, 0x2f, 0x6b, 0xbf, 0x84, 0x8f, 0xfa, 0x10, 0x7c, 0xdc, 0x87,
	0x15, 0xb3, 0x77, 0xc1, 0x68, 0x9e, 0xa5, 0x06, 0xb1, 0x96, 0x51, 0x18, 0x68, 0xd9, 0x44, 0x8c,
	0x59, 0x99, 0x8c, 0x31, 0x07, 0x0a, 0x60, 0xa5, 0xe0, 0xec, 0x92, 0x26, 0x4e, 0xc7, 0x45, 0xcc,
	0x22, 0x85, 0xaa, 0x6c, 0xb9, 0x4f, 0xe1, 0x66, 0x3e, 0xc8, 0x55, 0x42, 0x4a, 0x41, 0xd5, 0xad,
	0xae, 0x1f, 0x97, 0xb5, 0x8f, 0x40, 0xb6, 0x85, 0x06, 0x67, 0x4a, 0x7f, 0xa4, 0xd4, 0xa6, 0xfa,
	0x3f, 0x83, 0x8d, 0xfc, 0x1d, 0x97, 0xd1, 0x45, 0x98, 0x33, 0xc1, 0x69, 0x62, 0xbd, 0x10, 0xc8,
	0x08, 0xea, 0x4e, 0xb5, 0xca, 0x78, 0xcc, 0xb8, 0x84, 0x35, 0x67, 0x5d, 0xc2, 0x1e, 0x40, 0x43,
	0x5d, 0x0f, 0x32, 0xc1, 0x7f, 0x57, 0x94, 0x36, 0xc2, 0xd8, 0xda, 0x90, 0xfc, 0x24, 0x9e, 0x7e,
	0x01, 0x9c, 0x7a, 0x1d, 0xdd, 0x98, 0x71, 0x1d, 0xfd, 0x1c, 0x6c, 0xef, 0x18, 0x67, 0x0f, 0x1a,
	0xcb, 0x6a, 0xc1, 0xb6, 0x31, 0x18, 0xa5, 0x0d, 0x7e, 0x1b, 0x56, 0xbe, 0x14, 0x22, 0x2b, 0x19,
	0x94, 0xca, 0x01, 0x84, 0x60, 0xf3, 0x28, 0x8e, 0x23, 0x55, 0x80, 0x78, 0xf8, 0xa1, 0xf3, 0x67,
	0x08, 0xa0, 0xc8, 0x3e, 0xfe, 0x5b, 0xf4, 0xc3, 0xea, 0xb4, 0xc3, 0xc3, 0xff, 0xce, 0xb9, 0x7f,
	0x2e, 0x9e, 0x32, 0x71, 0xc9, 0x23, 0x46, 0xce, 0x60, 0xeb, 0x05, 0x93, 0xe5, 0x7f, 0x1b, 0xea,
	0x5a, 0x75, 0xce, 0x99, 0xc8, 0xc9, 0x50, 0xb9, 0x8e, 0xfd, 0x2b, 0xb9, 0x73, 0x6b, 0x9a, 0xba,
	0x97, 0x0c, 0xc8, 0x3b, 0xd8, 0x7c, 0xc1, 0xe4, 0xf8, 0xc3, 0x39, 0x39, 0x98, 0xec, 0x35, 0xf5,
	0xdf, 0x81, 0x9d, 0x87, 0xd7, 0x77, 0x50, 0x0b, 0xff, 0xb1, 0x02, 0xf7, 0xae, 0xe4, 0xc5, 0xe4,
	0xc9, 0x2c, 0xd2, 0x3b, 0x8d, 0xdb, 0xef, 0xfc, 0xe0, 0x3d, 0xbd, 0xf0, 0x28, 0xdb, 0x0b, 0xfa,
	0xdd, 0xfd, 0xf1, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x45, 0xd7, 0xd5, 0x3a, 0x21, 0x1e, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MastercardServiceClient is the client API for MastercardService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MastercardServiceClient interface {
	GetMerchantIdentifiers(ctx context.Context, in *MastercardRequest, opts ...grpc.CallOption) (*MastercardReply, error)
	GetCurrencyConversion(ctx context.Context, in *MastercardCurrencyConversionRequest, opts ...grpc.CallOption) (*MastercardCurrencyConversionReply, error)
	MerchantTransferFundingAndPayment(ctx context.Context, in *MerchantTransferFundingAndPaymentRequest, opts ...grpc.CallOption) (*MerchantTransferFundingAndPaymentResponse, error)
}

type mastercardServiceClient struct {
	cc *grpc.ClientConn
}

func NewMastercardServiceClient(cc *grpc.ClientConn) MastercardServiceClient {
	return &mastercardServiceClient{cc}
}

func (c *mastercardServiceClient) GetMerchantIdentifiers(ctx context.Context, in *MastercardRequest, opts ...grpc.CallOption) (*MastercardReply, error) {
	out := new(MastercardReply)
	err := c.cc.Invoke(ctx, "/mastercard.MastercardService/GetMerchantIdentifiers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mastercardServiceClient) GetCurrencyConversion(ctx context.Context, in *MastercardCurrencyConversionRequest, opts ...grpc.CallOption) (*MastercardCurrencyConversionReply, error) {
	out := new(MastercardCurrencyConversionReply)
	err := c.cc.Invoke(ctx, "/mastercard.MastercardService/GetCurrencyConversion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mastercardServiceClient) MerchantTransferFundingAndPayment(ctx context.Context, in *MerchantTransferFundingAndPaymentRequest, opts ...grpc.CallOption) (*MerchantTransferFundingAndPaymentResponse, error) {
	out := new(MerchantTransferFundingAndPaymentResponse)
	err := c.cc.Invoke(ctx, "/mastercard.MastercardService/MerchantTransferFundingAndPayment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MastercardServiceServer is the server API for MastercardService service.
type MastercardServiceServer interface {
	GetMerchantIdentifiers(context.Context, *MastercardRequest) (*MastercardReply, error)
	GetCurrencyConversion(context.Context, *MastercardCurrencyConversionRequest) (*MastercardCurrencyConversionReply, error)
	MerchantTransferFundingAndPayment(context.Context, *MerchantTransferFundingAndPaymentRequest) (*MerchantTransferFundingAndPaymentResponse, error)
}

func RegisterMastercardServiceServer(s *grpc.Server, srv MastercardServiceServer) {
	s.RegisterService(&_MastercardService_serviceDesc, srv)
}

func _MastercardService_GetMerchantIdentifiers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MastercardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MastercardServiceServer).GetMerchantIdentifiers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mastercard.MastercardService/GetMerchantIdentifiers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MastercardServiceServer).GetMerchantIdentifiers(ctx, req.(*MastercardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MastercardService_GetCurrencyConversion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MastercardCurrencyConversionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MastercardServiceServer).GetCurrencyConversion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mastercard.MastercardService/GetCurrencyConversion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MastercardServiceServer).GetCurrencyConversion(ctx, req.(*MastercardCurrencyConversionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MastercardService_MerchantTransferFundingAndPayment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerchantTransferFundingAndPaymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MastercardServiceServer).MerchantTransferFundingAndPayment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mastercard.MastercardService/MerchantTransferFundingAndPayment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MastercardServiceServer).MerchantTransferFundingAndPayment(ctx, req.(*MerchantTransferFundingAndPaymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MastercardService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mastercard.MastercardService",
	HandlerType: (*MastercardServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMerchantIdentifiers",
			Handler:    _MastercardService_GetMerchantIdentifiers_Handler,
		},
		{
			MethodName: "GetCurrencyConversion",
			Handler:    _MastercardService_GetCurrencyConversion_Handler,
		},
		{
			MethodName: "MerchantTransferFundingAndPayment",
			Handler:    _MastercardService_MerchantTransferFundingAndPayment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/mastercard.proto",
}
