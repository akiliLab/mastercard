syntax = "proto3";

package mastercard;

import "google/protobuf/timestamp.proto";

service MastercardService {
  rpc GetMerchantIdentifiers(MastercardRequest) returns (MastercardReply);
  rpc GetCurrencyConversion(MastercardCurrencyConversionRequest)
      returns (MastercardCurrencyConversionReply);
  rpc MerchantTransferFundingAndPayment(
      MerchantTransferFundingAndPaymentRequest)
      returns (MerchantTransferFundingAndPaymentResponse);
}

message MastercardRequest {
  string MerchantID = 1;
  // this can be fuzzy or exact search
  int64 Search = 2;
}
message MastercardReply { MerchantIDs merchantIDs = 1; }

message MerchantIDs {
  string Message = 1;
  repeated Merchant Merchant = 2;
}

message Merchant {
  Address Address = 1;
  string PhoneNumber = 2;
  string BrandName = 3;
  string MerchantCategory = 4;
  string MerchantDbaName = 5;
  string DescriptorText = 6;
  string LegalCorporateName = 7;
  string Comment = 8;
  int64 LocationID = 9;
  string SoleProprietorName = 10;
  int64 MatchConfidenceScore = 11;
}

message CountrySubdivision {
  string name = 1;
  string code = 2;
}

// Country contains country informations
message Country {
  string name = 1;
  string code = 2;
}

message AdditionalMerchantData {
  string payment_facilitator_id = 1;
  string sub_merchant_id = 2;
}

// Address contains the full address of a merchant
message Address {
  string line1 = 1;
  string line2 = 2;
  string city = 3;
  string country_subdivision = 4;
  string postal_code = 5;
  string country = 6;
}

message TokenCryptogram {
  string type = 1;
  string value = 2;
  string pan_sequence_number = 3;
}

message MastercardCurrencyConversionRequest {
  // Date of the requested FX rates.
  string fxDate = 1;
  // Currency of the transaction.
  string transCurr = 2;
  // Cardholder billing currency.
  string crdhldBillCurr = 3;
  // Additional fees imposed by the bank.
  int64 bankFee = 4;
  // Amount in the transaction currency
  float transAmt = 5;
}

message MastercardCurrencyConversionReply { CurrencyResponse response = 1; }

message CurrencyResponse {
  // The name of the service being requested.
  string name = 1;
  // The type of response being returned by the API.
  string type = 2;
  // The description of the API being called.
  string description = 3;
  // Additional fees imposed by the bank.
  google.protobuf.Timestamp date = 4;
  // Amount in the transaction currency
  float transAmt = 5;
  // Data
  CurrencyDataResponse data = 6;
}

message CurrencyDataResponse {
  // Rate applied to the transaction to convert from Transaction Currency to
  // Cardholder Billing Currency.
  float conversionRate = 1;
  // Amount in the cardholder billing currency.
  float crdhldBillAmt = 2;
  // Amount in the transaction currency.
  float transAmt = 3;
  // Date of the requested FX rates.
  string fxDate = 4;
  // Currency of the transaction
  string transCurr = 5;
  // Cardholder billing currency.
  string crdhldBillCurr = 6;
  // Bankfee
  float bankFee = 7;
  // Error code
  int64 errorCode = 8;
  // The reason for the error.
  string errorMessage = 9;
}

message Sender {
  string first_name = 1;
  string middle_name = 2;
  string last_name = 3;
  Address address = 4;
  string phone = 5;
  string email = 6;
  string authentication_value = 7;
  TokenCryptogram token_cryptogram = 8;
  AdditionalMerchantData additional_merchant_data = 9;
}

message MerchantTransfer {
  string transfer_reference = 1;
  string payment_type = 2;
  string payment_origination_country = 3;
  string transaction_local_date_time = 4;
  TransferAmount transfer_amount = 5;
  string sender_account_uri = 6;
  Sender sender = 7;
  string recipient_account_uri = 8;
  Recipient recipient = 9;
  ReconciliationData reconciliation_data = 10;
  string mastercard_assigned_id = 11;
  string routing_transit_number = 12;
  string processor_id = 13;
  string additional_message = 14;
  string participation_id = 15;
  string convenience_amount = 16;
  string convenience_indicator = 17;
  string interchange_rate_designator = 18;
  string qr_data = 19;
  string unique_reference_number = 20;
  Participant participant = 21;
  string digital_account_reference_number = 22;
}

message Recipient {
  string first_name = 1;
  string middle_name = 2;
  string last_name = 3;
  Address address = 4;
  string phone = 5;
  string email = 6;
  string authentication_value = 7;
  TokenCryptogram token_cryptogram = 8;
  string merchant_category_code = 9;
  AdditionalMerchantData additional_merchant_data = 10;
}

message TransferAmount {
  string value = 1;
  string currency = 2;
}

message TransactionAmount {
  string value = 1;
  string currency = 2;
}

message Participant {
  string card_acceptor_id = 1;
  string card_acceptor_name = 2;
}

message CustomField {
  string name = 1;
  string value = 2;
}

message ReconciliationData { repeated CustomField custom_field = 1; }

message MerchantTransferFundingAndPaymentRequest {
  string partnerId = 1;
  MerchantTransfer merchant_transfer = 2;
}

message MerchantTransferFundingAndPaymentResponse {
  MerchantTransferResponse merchant_transfer = 1;
}

message MerchantTransferResponse {
  string id = 1;
  string resource_type = 2;
  string transfer_reference = 3;
  string payment_typeb = 26;
  string sender_account_uri = 4;
  string digital_account_reference_number = 5;
  Sender sender = 6;
  string recipient_account_uri = 7;
  Recipient recipient = 8;
  TransferAmount transfer_amount = 9;
  string created = 10;
  TransactionHistory transaction_history = 11;
  ReconciliationData reconciliation_data = 25;
  string payment_origination_country = 12;
  string original_status = 13;
  string status = 14;
  string status_timestamp = 15;
  string transaction_local_date_time = 16;
  string mastercard_assigned_id = 17;
  string funding_source = 18;
  string routing_transit_number = 19;
  string processor_id = 20;
  Participant participant = 21;
  string additional_message = 22;
  string participation_id = 23;
  string interchange_rate_designator = 24;
}

message TransactionHistory {
  string resource_type = 1;
  string item_count = 2;
  repeated Transaction data = 3;
}

message Transaction {
  string id = 1;
  string resource_type = 2;
  string account_uri = 3;
  TransactionAmount transaction_amount = 4;
  string network = 5;
  string network_status_code = 6;
  string network_status_description = 7;
  string funds_availability = 8;
  string type = 9;
  string create_timestamp = 10;
  string status = 11;
  string status_reason = 12;
  string status_timestamp = 13;
  string retrieval_reference = 14;
  string system_trace_audit_number = 15;
  string switch_serial_number = 16;
  string unique_reference_number = 17;
  string authorization_id = 18;
  string qr_data = 19;
  string convenience_indicator = 20;
  string payment_account_reference = 21;
}

message ErrorResponse {
  string source = 1;
  string reason_code = 2;
  string message = 3;
}